"use client";

// src/primitive-hooks/composer/useComposerSend.tsx
import { useCallback } from "react";
import { useCombinedStore } from "../../utils/combined/useCombinedStore.mjs";
import { useThreadRuntime } from "../../context/react/ThreadContext.mjs";
import { useComposerRuntime } from "../../context/index.mjs";
var useComposerSend = () => {
  const composerRuntime = useComposerRuntime();
  const threadRuntime = useThreadRuntime();
  const disabled = useCombinedStore(
    [threadRuntime, composerRuntime],
    (t, c) => t.isRunning || !c.isEditing || c.isEmpty
  );
  const callback = useCallback(() => {
    if (!composerRuntime.getState().isEditing) return;
    composerRuntime.send();
  }, [threadRuntime]);
  if (disabled) return null;
  return callback;
};
export {
  useComposerSend
};
//# sourceMappingURL=useComposerSend.mjs.map