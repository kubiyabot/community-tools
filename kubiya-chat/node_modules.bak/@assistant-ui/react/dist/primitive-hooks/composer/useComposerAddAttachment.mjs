"use client";

// src/primitive-hooks/composer/useComposerAddAttachment.tsx
import { useCallback } from "react";
import { useComposer, useComposerRuntime } from "../../context/index.mjs";
var useComposerAddAttachment = ({
  multiple = true
} = {}) => {
  const disabled = useComposer((c) => !c.isEditing);
  const composerRuntime = useComposerRuntime();
  const callback = useCallback(() => {
    const input = document.createElement("input");
    input.type = "file";
    input.multiple = multiple;
    const attachmentAccept = composerRuntime.getAttachmentAccept();
    if (attachmentAccept !== "*") {
      input.accept = attachmentAccept;
    }
    input.onchange = (e) => {
      const fileList = e.target.files;
      if (!fileList) return;
      for (const file of fileList) {
        composerRuntime.addAttachment(file);
      }
    };
    input.click();
  }, [composerRuntime]);
  if (disabled) return null;
  return callback;
};
export {
  useComposerAddAttachment
};
//# sourceMappingURL=useComposerAddAttachment.mjs.map