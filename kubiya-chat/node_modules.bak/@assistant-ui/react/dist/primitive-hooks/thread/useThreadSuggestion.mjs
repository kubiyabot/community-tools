"use client";

// src/primitive-hooks/thread/useThreadSuggestion.tsx
import { useCallback } from "react";
import { useThread } from "../../context/index.mjs";
import { useThreadRuntime } from "../../context/react/ThreadContext.mjs";
var useThreadSuggestion = ({
  prompt,
  autoSend
}) => {
  const threadRuntime = useThreadRuntime();
  const disabled = useThread((t) => t.isDisabled);
  const callback = useCallback(() => {
    if (autoSend && !threadRuntime.getState().isRunning) {
      threadRuntime.append(prompt);
      threadRuntime.composer.setText("");
    } else {
      threadRuntime.composer.setText(prompt);
    }
  }, [threadRuntime, autoSend, prompt]);
  if (disabled) return null;
  return callback;
};
export {
  useThreadSuggestion
};
//# sourceMappingURL=useThreadSuggestion.mjs.map