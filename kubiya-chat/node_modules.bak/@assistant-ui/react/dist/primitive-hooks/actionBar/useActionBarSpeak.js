"use strict";
"use client";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/primitive-hooks/actionBar/useActionBarSpeak.tsx
var useActionBarSpeak_exports = {};
__export(useActionBarSpeak_exports, {
  useActionBarSpeak: () => useActionBarSpeak
});
module.exports = __toCommonJS(useActionBarSpeak_exports);
var import_react = require("react");
var import_context = require("../../context/index.js");
var useActionBarSpeak = () => {
  const messageRunime = (0, import_context.useMessageRuntime)();
  const callback = (0, import_react.useCallback)(async () => {
    messageRunime.speak();
  }, [messageRunime]);
  const hasSpeakableContent = (0, import_context.useMessage)((m) => {
    return (m.role !== "assistant" || m.status.type !== "running") && m.content.some((c) => c.type === "text" && c.text.length > 0);
  });
  if (!hasSpeakableContent) return null;
  return callback;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  useActionBarSpeak
});
//# sourceMappingURL=useActionBarSpeak.js.map