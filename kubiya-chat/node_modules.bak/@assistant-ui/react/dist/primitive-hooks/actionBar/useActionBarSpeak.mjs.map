{"version":3,"sources":["../../../src/primitive-hooks/actionBar/useActionBarSpeak.tsx"],"sourcesContent":["\"use client\";\n\nimport { useCallback } from \"react\";\n\nimport { useMessage, useMessageRuntime } from \"../../context\";\n\nexport const useActionBarSpeak = () => {\n  const messageRunime = useMessageRuntime();\n  const callback = useCallback(async () => {\n    messageRunime.speak();\n  }, [messageRunime]);\n\n  const hasSpeakableContent = useMessage((m) => {\n    return (\n      (m.role !== \"assistant\" || m.status.type !== \"running\") &&\n      m.content.some((c) => c.type === \"text\" && c.text.length > 0)\n    );\n  });\n\n  if (!hasSpeakableContent) return null;\n  return callback;\n};\n"],"mappings":";;;AAEA,SAAS,mBAAmB;AAE5B,SAAS,YAAY,yBAAyB;AAEvC,IAAM,oBAAoB,MAAM;AACrC,QAAM,gBAAgB,kBAAkB;AACxC,QAAM,WAAW,YAAY,YAAY;AACvC,kBAAc,MAAM;AAAA,EACtB,GAAG,CAAC,aAAa,CAAC;AAElB,QAAM,sBAAsB,WAAW,CAAC,MAAM;AAC5C,YACG,EAAE,SAAS,eAAe,EAAE,OAAO,SAAS,cAC7C,EAAE,QAAQ,KAAK,CAAC,MAAM,EAAE,SAAS,UAAU,EAAE,KAAK,SAAS,CAAC;AAAA,EAEhE,CAAC;AAED,MAAI,CAAC,oBAAqB,QAAO;AACjC,SAAO;AACT;","names":[]}