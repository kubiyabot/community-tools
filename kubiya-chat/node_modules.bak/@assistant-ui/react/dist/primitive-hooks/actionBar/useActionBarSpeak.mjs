"use client";

// src/primitive-hooks/actionBar/useActionBarSpeak.tsx
import { useCallback } from "react";
import { useMessage, useMessageRuntime } from "../../context/index.mjs";
var useActionBarSpeak = () => {
  const messageRunime = useMessageRuntime();
  const callback = useCallback(async () => {
    messageRunime.speak();
  }, [messageRunime]);
  const hasSpeakableContent = useMessage((m) => {
    return (m.role !== "assistant" || m.status.type !== "running") && m.content.some((c) => c.type === "text" && c.text.length > 0);
  });
  if (!hasSpeakableContent) return null;
  return callback;
};
export {
  useActionBarSpeak
};
//# sourceMappingURL=useActionBarSpeak.mjs.map