"use strict";
"use client";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/primitives/actionBar/ActionBarFeedbackNegative.tsx
var ActionBarFeedbackNegative_exports = {};
__export(ActionBarFeedbackNegative_exports, {
  ActionBarPrimitiveFeedbackNegative: () => ActionBarPrimitiveFeedbackNegative
});
module.exports = __toCommonJS(ActionBarFeedbackNegative_exports);
var import_react = require("react");
var import_useActionBarFeedbackNegative = require("../../primitive-hooks/actionBar/useActionBarFeedbackNegative.js");
var import_primitive = require("@radix-ui/primitive");
var import_context = require("../../context/index.js");
var import_react_primitive = require("@radix-ui/react-primitive");
var import_jsx_runtime = require("react/jsx-runtime");
var ActionBarPrimitiveFeedbackNegative = (0, import_react.forwardRef)(({ onClick, disabled, ...props }, forwardedRef) => {
  const isSubmitted = (0, import_context.useMessage)(
    (u) => u.submittedFeedback?.type === "negative"
  );
  const callback = (0, import_useActionBarFeedbackNegative.useActionBarFeedbackNegative)();
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
    import_react_primitive.Primitive.button,
    {
      type: "button",
      ...isSubmitted ? { "data-submitted": "true" } : {},
      ...props,
      ref: forwardedRef,
      disabled: disabled || !callback,
      onClick: (0, import_primitive.composeEventHandlers)(onClick, () => {
        callback?.();
      })
    }
  );
});
ActionBarPrimitiveFeedbackNegative.displayName = "ActionBarPrimitive.FeedbackNegative";
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ActionBarPrimitiveFeedbackNegative
});
//# sourceMappingURL=ActionBarFeedbackNegative.js.map