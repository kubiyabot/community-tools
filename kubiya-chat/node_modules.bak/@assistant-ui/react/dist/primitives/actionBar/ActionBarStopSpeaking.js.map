{"version":3,"sources":["../../../src/primitives/actionBar/ActionBarStopSpeaking.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef } from \"react\";\nimport { useActionBarStopSpeaking } from \"../../primitive-hooks/actionBar/useActionBarStopSpeaking\";\nimport { ActionButtonProps } from \"../../utils/createActionButton\";\nimport { useEscapeKeydown } from \"@radix-ui/react-use-escape-keydown\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\n\nexport namespace ActionBarPrimitiveStopSpeaking {\n  export type Element = HTMLButtonElement;\n  export type Props = ActionButtonProps<typeof useActionBarStopSpeaking>;\n}\n\nexport const ActionBarPrimitiveStopSpeaking = forwardRef<\n  ActionBarPrimitiveStopSpeaking.Element,\n  ActionBarPrimitiveStopSpeaking.Props\n>((props, ref) => {\n  const callback = useActionBarStopSpeaking();\n\n  // TODO this stops working if the user is not hovering over an older message\n  useEscapeKeydown((e) => {\n    if (callback) {\n      e.preventDefault();\n      callback();\n    }\n  });\n\n  return (\n    <Primitive.button\n      type=\"button\"\n      disabled={!callback}\n      {...props}\n      ref={ref}\n      onClick={composeEventHandlers(props.onClick, () => {\n        callback?.();\n      })}\n    />\n  );\n});\n\nActionBarPrimitiveStopSpeaking.displayName = \"ActionBarPrimitive.StopSpeaking\";\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,mBAA2B;AAC3B,sCAAyC;AAEzC,sCAAiC;AACjC,6BAA0B;AAC1B,uBAAqC;AAsBjC;AAfG,IAAM,qCAAiC,yBAG5C,CAAC,OAAO,QAAQ;AAChB,QAAM,eAAW,0DAAyB;AAG1C,wDAAiB,CAAC,MAAM;AACtB,QAAI,UAAU;AACZ,QAAE,eAAe;AACjB,eAAS;AAAA,IACX;AAAA,EACF,CAAC;AAED,SACE;AAAA,IAAC,iCAAU;AAAA,IAAV;AAAA,MACC,MAAK;AAAA,MACL,UAAU,CAAC;AAAA,MACV,GAAG;AAAA,MACJ;AAAA,MACA,aAAS,uCAAqB,MAAM,SAAS,MAAM;AACjD,mBAAW;AAAA,MACb,CAAC;AAAA;AAAA,EACH;AAEJ,CAAC;AAED,+BAA+B,cAAc;","names":[]}