"use client";

// src/primitives/actionBar/ActionBarStopSpeaking.tsx
import { forwardRef } from "react";
import { useActionBarStopSpeaking } from "../../primitive-hooks/actionBar/useActionBarStopSpeaking.mjs";
import { useEscapeKeydown } from "@radix-ui/react-use-escape-keydown";
import { Primitive } from "@radix-ui/react-primitive";
import { composeEventHandlers } from "@radix-ui/primitive";
import { jsx } from "react/jsx-runtime";
var ActionBarPrimitiveStopSpeaking = forwardRef((props, ref) => {
  const callback = useActionBarStopSpeaking();
  useEscapeKeydown((e) => {
    if (callback) {
      e.preventDefault();
      callback();
    }
  });
  return /* @__PURE__ */ jsx(
    Primitive.button,
    {
      type: "button",
      disabled: !callback,
      ...props,
      ref,
      onClick: composeEventHandlers(props.onClick, () => {
        callback?.();
      })
    }
  );
});
ActionBarPrimitiveStopSpeaking.displayName = "ActionBarPrimitive.StopSpeaking";
export {
  ActionBarPrimitiveStopSpeaking
};
//# sourceMappingURL=ActionBarStopSpeaking.mjs.map