"use client";

// src/primitives/actionBar/ActionBarFeedbackNegative.tsx
import { forwardRef } from "react";
import { useActionBarFeedbackNegative } from "../../primitive-hooks/actionBar/useActionBarFeedbackNegative.mjs";
import { composeEventHandlers } from "@radix-ui/primitive";
import { useMessage } from "../../context/index.mjs";
import { Primitive } from "@radix-ui/react-primitive";
import { jsx } from "react/jsx-runtime";
var ActionBarPrimitiveFeedbackNegative = forwardRef(({ onClick, disabled, ...props }, forwardedRef) => {
  const isSubmitted = useMessage(
    (u) => u.submittedFeedback?.type === "negative"
  );
  const callback = useActionBarFeedbackNegative();
  return /* @__PURE__ */ jsx(
    Primitive.button,
    {
      type: "button",
      ...isSubmitted ? { "data-submitted": "true" } : {},
      ...props,
      ref: forwardedRef,
      disabled: disabled || !callback,
      onClick: composeEventHandlers(onClick, () => {
        callback?.();
      })
    }
  );
});
ActionBarPrimitiveFeedbackNegative.displayName = "ActionBarPrimitive.FeedbackNegative";
export {
  ActionBarPrimitiveFeedbackNegative
};
//# sourceMappingURL=ActionBarFeedbackNegative.mjs.map