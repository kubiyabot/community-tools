{"version":3,"sources":["../../../src/primitives/actionBar/ActionBarCopy.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef } from \"react\";\nimport { useActionBarCopy } from \"../../primitive-hooks/actionBar/useActionBarCopy\";\nimport { ActionButtonProps } from \"../../utils/createActionButton\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { useMessageUtils } from \"../../context\";\n\nexport namespace ActionBarPrimitiveCopy {\n  export type Element = HTMLButtonElement;\n  export type Props = ActionButtonProps<typeof useActionBarCopy>;\n}\n\nexport const ActionBarPrimitiveCopy = forwardRef<\n  ActionBarPrimitiveCopy.Element,\n  ActionBarPrimitiveCopy.Props\n>(({ copiedDuration, onClick, disabled, ...props }, forwardedRef) => {\n  const isCopied = useMessageUtils((u) => u.isCopied);\n  const callback = useActionBarCopy({ copiedDuration });\n  return (\n    <Primitive.button\n      type=\"button\"\n      {...(isCopied ? { \"data-copied\": \"true\" } : {})}\n      {...props}\n      ref={forwardedRef}\n      disabled={disabled || !callback}\n      onClick={composeEventHandlers(onClick, () => {\n        callback?.();\n      })}\n    />\n  );\n});\n\nActionBarPrimitiveCopy.displayName = \"ActionBarPrimitive.Copy\";\n"],"mappings":";;;AAEA,SAAS,kBAAkB;AAC3B,SAAS,wBAAwB;AAEjC,SAAS,4BAA4B;AACrC,SAAS,iBAAiB;AAC1B,SAAS,uBAAuB;AAc5B;AAPG,IAAM,yBAAyB,WAGpC,CAAC,EAAE,gBAAgB,SAAS,UAAU,GAAG,MAAM,GAAG,iBAAiB;AACnE,QAAM,WAAW,gBAAgB,CAAC,MAAM,EAAE,QAAQ;AAClD,QAAM,WAAW,iBAAiB,EAAE,eAAe,CAAC;AACpD,SACE;AAAA,IAAC,UAAU;AAAA,IAAV;AAAA,MACC,MAAK;AAAA,MACJ,GAAI,WAAW,EAAE,eAAe,OAAO,IAAI,CAAC;AAAA,MAC5C,GAAG;AAAA,MACJ,KAAK;AAAA,MACL,UAAU,YAAY,CAAC;AAAA,MACvB,SAAS,qBAAqB,SAAS,MAAM;AAC3C,mBAAW;AAAA,MACb,CAAC;AAAA;AAAA,EACH;AAEJ,CAAC;AAED,uBAAuB,cAAc;","names":[]}