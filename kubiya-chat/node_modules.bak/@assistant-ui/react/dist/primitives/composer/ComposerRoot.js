"use strict";
"use client";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/primitives/composer/ComposerRoot.tsx
var ComposerRoot_exports = {};
__export(ComposerRoot_exports, {
  ComposerPrimitiveRoot: () => ComposerPrimitiveRoot
});
module.exports = __toCommonJS(ComposerRoot_exports);
var import_primitive = require("@radix-ui/primitive");
var import_react_primitive = require("@radix-ui/react-primitive");
var import_react = require("react");
var import_useComposerSend = require("../../primitive-hooks/composer/useComposerSend.js");
var import_jsx_runtime = require("react/jsx-runtime");
var ComposerPrimitiveRoot = (0, import_react.forwardRef)(({ onSubmit, ...rest }, forwardedRef) => {
  const send = (0, import_useComposerSend.useComposerSend)();
  const handleSubmit = (e) => {
    e.preventDefault();
    if (!send) return;
    send();
  };
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
    import_react_primitive.Primitive.form,
    {
      ...rest,
      ref: forwardedRef,
      onSubmit: (0, import_primitive.composeEventHandlers)(onSubmit, handleSubmit)
    }
  );
});
ComposerPrimitiveRoot.displayName = "ComposerPrimitive.Root";
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ComposerPrimitiveRoot
});
//# sourceMappingURL=ComposerRoot.js.map