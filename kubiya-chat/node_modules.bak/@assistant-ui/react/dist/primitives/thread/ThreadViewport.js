"use strict";
"use client";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/primitives/thread/ThreadViewport.tsx
var ThreadViewport_exports = {};
__export(ThreadViewport_exports, {
  ThreadPrimitiveViewport: () => ThreadPrimitiveViewport
});
module.exports = __toCommonJS(ThreadViewport_exports);
var import_react_compose_refs = require("@radix-ui/react-compose-refs");
var import_react_primitive = require("@radix-ui/react-primitive");
var import_react = require("react");
var import_useThreadViewportAutoScroll = require("../../primitive-hooks/thread/useThreadViewportAutoScroll.js");
var import_jsx_runtime = require("react/jsx-runtime");
var ThreadPrimitiveViewport = (0, import_react.forwardRef)(({ autoScroll, children, ...rest }, forwardedRef) => {
  const autoScrollRef = (0, import_useThreadViewportAutoScroll.useThreadViewportAutoScroll)({
    autoScroll
  });
  const ref = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, autoScrollRef);
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.div, { ...rest, ref, children });
});
ThreadPrimitiveViewport.displayName = "ThreadPrimitive.Viewport";
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ThreadPrimitiveViewport
});
//# sourceMappingURL=ThreadViewport.js.map