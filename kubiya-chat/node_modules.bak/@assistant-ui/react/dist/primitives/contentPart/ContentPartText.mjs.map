{"version":3,"sources":["../../../src/primitives/contentPart/ContentPartText.tsx"],"sourcesContent":["\"use client\";\n\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport {\n  type ElementRef,\n  forwardRef,\n  ComponentPropsWithoutRef,\n  ElementType,\n} from \"react\";\nimport { useContentPartText } from \"../../primitive-hooks/contentPart/useContentPartText\";\nimport { useSmooth } from \"../../utils/smooth/useSmooth\";\n\nexport namespace ContentPartPrimitiveText {\n  export type Element = ElementRef<typeof Primitive.span>;\n  export type Props = Omit<\n    ComponentPropsWithoutRef<typeof Primitive.span>,\n    \"children\" | \"asChild\"\n  > & {\n    smooth?: boolean;\n    component?: ElementType;\n  };\n}\n\nexport const ContentPartPrimitiveText = forwardRef<\n  ContentPartPrimitiveText.Element,\n  ContentPartPrimitiveText.Props\n>(({ smooth = true, component: Component = \"span\", ...rest }, forwardedRef) => {\n  const { text, status } = useSmooth(useContentPartText(), smooth);\n\n  return (\n    <Component data-status={status.type} {...rest} ref={forwardedRef}>\n      {text}\n    </Component>\n  );\n});\n\nContentPartPrimitiveText.displayName = \"ContentPartPrimitive.Text\";\n"],"mappings":";;;AAGA;AAAA,EAEE;AAAA,OAGK;AACP,SAAS,0BAA0B;AACnC,SAAS,iBAAiB;AAoBtB;AAPG,IAAM,2BAA2B,WAGtC,CAAC,EAAE,SAAS,MAAM,WAAW,YAAY,QAAQ,GAAG,KAAK,GAAG,iBAAiB;AAC7E,QAAM,EAAE,MAAM,OAAO,IAAI,UAAU,mBAAmB,GAAG,MAAM;AAE/D,SACE,oBAAC,aAAU,eAAa,OAAO,MAAO,GAAG,MAAM,KAAK,cACjD,gBACH;AAEJ,CAAC;AAED,yBAAyB,cAAc;","names":[]}