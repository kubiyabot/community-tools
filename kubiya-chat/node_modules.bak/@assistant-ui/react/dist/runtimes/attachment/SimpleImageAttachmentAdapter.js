"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/runtimes/attachment/SimpleImageAttachmentAdapter.ts
var SimpleImageAttachmentAdapter_exports = {};
__export(SimpleImageAttachmentAdapter_exports, {
  SimpleImageAttachmentAdapter: () => SimpleImageAttachmentAdapter
});
module.exports = __toCommonJS(SimpleImageAttachmentAdapter_exports);
var SimpleImageAttachmentAdapter = class {
  accept = "image/*";
  async add(state) {
    return {
      id: state.file.name,
      type: "image",
      name: state.file.name,
      contentType: state.file.type,
      file: state.file,
      status: { type: "requires-action", reason: "composer-send" }
    };
  }
  async send(attachment) {
    return {
      ...attachment,
      status: { type: "complete" },
      content: [
        {
          type: "image",
          image: await getFileDataURL(attachment.file)
        }
      ]
    };
  }
  async remove() {
  }
};
var getFileDataURL = (file) => new Promise((resolve, reject) => {
  const reader = new FileReader();
  reader.onload = () => resolve(reader.result);
  reader.onerror = (error) => reject(error);
  reader.readAsDataURL(file);
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  SimpleImageAttachmentAdapter
});
//# sourceMappingURL=SimpleImageAttachmentAdapter.js.map