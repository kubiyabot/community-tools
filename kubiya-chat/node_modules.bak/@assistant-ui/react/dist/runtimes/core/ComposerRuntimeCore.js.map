{"version":3,"sources":["../../../src/runtimes/core/ComposerRuntimeCore.tsx"],"sourcesContent":["import type { Attachment, PendingAttachment, Unsubscribe } from \"../../types\";\nimport { MessageRole, RunConfig } from \"../../types/AssistantTypes\";\n\nexport type ComposerRuntimeEventType = \"send\" | \"attachment_add\";\n\nexport type ComposerRuntimeCore = Readonly<{\n  isEditing: boolean;\n\n  canCancel: boolean;\n  isEmpty: boolean;\n\n  attachments: readonly Attachment[];\n\n  getAttachmentAccept(): string;\n  addAttachment: (file: File) => Promise<void>;\n  removeAttachment: (attachmentId: string) => Promise<void>;\n\n  text: string;\n  setText: (value: string) => void;\n\n  role: MessageRole;\n  setRole: (role: MessageRole) => void;\n\n  runConfig: RunConfig;\n  setRunConfig: (runConfig: RunConfig) => void;\n\n  reset: () => Promise<void>;\n  clearAttachments: () => Promise<void>;\n\n  send: () => void;\n  cancel: () => void;\n\n  subscribe: (callback: () => void) => Unsubscribe;\n\n  unstable_on: (\n    event: ComposerRuntimeEventType,\n    callback: () => void,\n  ) => Unsubscribe;\n}>;\n\nexport type ThreadComposerRuntimeCore = ComposerRuntimeCore &\n  Readonly<{\n    attachments: readonly PendingAttachment[];\n  }>;\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAAA;","names":[]}