{"version":3,"sources":["../../../src/runtimes/core/ThreadListRuntimeCore.tsx"],"sourcesContent":["import { Unsubscribe } from \"../../types\";\nimport { ThreadRuntimeCore } from \"./ThreadRuntimeCore\";\n\ntype ThreadListItemCoreState = {\n  readonly threadId: string;\n  readonly remoteId?: string | undefined;\n  readonly externalId?: string | undefined;\n\n  readonly status: \"archived\" | \"regular\" | \"new\" | \"deleted\";\n  readonly title?: string | undefined;\n\n  readonly runtime?: ThreadRuntimeCore | undefined;\n};\n\nexport type ThreadListRuntimeCore = {\n  mainThreadId: string;\n  newThreadId: string | undefined;\n\n  threadIds: readonly string[];\n  archivedThreadIds: readonly string[];\n\n  getMainThreadRuntimeCore(): ThreadRuntimeCore;\n  getItemById(threadId: string): ThreadListItemCoreState | undefined;\n\n  switchToThread(threadId: string): Promise<void>;\n  switchToNewThread(): Promise<void>;\n\n  getLoadThreadsPromise(): Promise<void>;\n  // getLoadArchivedThreadsPromise(): Promise<void>;\n\n  rename(threadId: string, newTitle: string): Promise<void>;\n  archive(threadId: string): Promise<void>;\n  unarchive(threadId: string): Promise<void>;\n  delete(threadId: string): Promise<void>;\n\n  subscribe(callback: () => void): Unsubscribe;\n};\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAAA;","names":[]}