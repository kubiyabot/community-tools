{"version":3,"sources":["../../../../../src/runtimes/edge/streams/utils/chunkByLineStream.ts"],"sourcesContent":["export function chunkByLineStream() {\n  let buffer = \"\";\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      buffer += chunk;\n      const lines = buffer.split(\"\\n\");\n\n      // Process all complete lines\n      for (let i = 0; i < lines.length - 1; i++) {\n        controller.enqueue(lines[i]);\n      }\n\n      // Keep the last incomplete line in the buffer\n      buffer = lines[lines.length - 1]!;\n    },\n    flush(controller) {\n      // flush any remaining content in the buffer\n      if (buffer) {\n        controller.enqueue(buffer);\n      }\n    },\n  });\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,SAAS,oBAAoB;AAClC,MAAI,SAAS;AAEb,SAAO,IAAI,gBAAgB;AAAA,IACzB,UAAU,OAAO,YAAY;AAC3B,gBAAU;AACV,YAAM,QAAQ,OAAO,MAAM,IAAI;AAG/B,eAAS,IAAI,GAAG,IAAI,MAAM,SAAS,GAAG,KAAK;AACzC,mBAAW,QAAQ,MAAM,CAAC,CAAC;AAAA,MAC7B;AAGA,eAAS,MAAM,MAAM,SAAS,CAAC;AAAA,IACjC;AAAA,IACA,MAAM,YAAY;AAEhB,UAAI,QAAQ;AACV,mBAAW,QAAQ,MAAM;AAAA,MAC3B;AAAA,IACF;AAAA,EACF,CAAC;AACH;","names":[]}