"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/runtimes/remote-thread-list/cloud/AssistantCloudThreads.tsx
var AssistantCloudThreads_exports = {};
__export(AssistantCloudThreads_exports, {
  AssistantCloudThreads: () => AssistantCloudThreads
});
module.exports = __toCommonJS(AssistantCloudThreads_exports);
var AssistantCloudThreads = class {
  constructor(cloud) {
    this.cloud = cloud;
  }
  async list(query) {
    return this.cloud.makeRequest("/threads", { query });
  }
  async create(body) {
    return this.cloud.makeRequest("/threads", { method: "POST", body });
  }
  async update(threadId, body) {
    return this.cloud.makeRequest(`/threads/${threadId}`, {
      method: "PUT",
      body
    });
  }
  async delete(threadId) {
    return this.cloud.makeRequest(`/threads/${threadId}`, { method: "DELETE" });
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  AssistantCloudThreads
});
//# sourceMappingURL=AssistantCloudThreads.js.map