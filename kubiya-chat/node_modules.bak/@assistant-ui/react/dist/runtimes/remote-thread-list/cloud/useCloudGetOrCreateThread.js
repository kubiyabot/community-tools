"use strict";
"use client";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/runtimes/remote-thread-list/cloud/useCloudGetOrCreateThread.tsx
var useCloudGetOrCreateThread_exports = {};
__export(useCloudGetOrCreateThread_exports, {
  useCloudGetOrCreateThread: () => useCloudGetOrCreateThread
});
module.exports = __toCommonJS(useCloudGetOrCreateThread_exports);
var import_react = require("react");
var import_ThreadListItemContext = require("../../../context/react/ThreadListItemContext.js");
var import_CloudContext = require("./CloudContext.js");
var useCloudGetOrCreateThread = () => {
  const currentId = (0, import_ThreadListItemContext.useThreadListItem)((i) => i.externalId);
  const cloudContextValue = (0, import_react.useContext)(import_CloudContext.CloudContext);
  if (!cloudContextValue) throw new Error("CloudContext not available");
  return async () => {
    let externalId = currentId;
    if (!externalId) {
      externalId = (await cloudContextValue.initialize()).externalId;
    }
    return { externalId };
  };
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  useCloudGetOrCreateThread
});
//# sourceMappingURL=useCloudGetOrCreateThread.js.map