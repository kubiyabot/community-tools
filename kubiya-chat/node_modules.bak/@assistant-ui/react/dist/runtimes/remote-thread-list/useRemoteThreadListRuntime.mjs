"use client";

// src/runtimes/remote-thread-list/useRemoteThreadListRuntime.tsx
import { useState, useEffect, useMemo } from "react";
import { BaseAssistantRuntimeCore } from "../core/BaseAssistantRuntimeCore.mjs";
import { RemoteThreadListThreadListRuntimeCore } from "./RemoteThreadListThreadListRuntimeCore.mjs";
import { AssistantRuntimeImpl } from "../../internal.mjs";
var RemoteThreadListRuntimeCore = class extends BaseAssistantRuntimeCore {
  threadList;
  constructor(adapter) {
    super();
    this.threadList = new RemoteThreadListThreadListRuntimeCore(adapter);
  }
  get RenderComponent() {
    return this.threadList.__internal_RenderComponent;
  }
};
var useRemoteThreadListRuntime = (adapter) => {
  const [runtime] = useState(() => new RemoteThreadListRuntimeCore(adapter));
  useEffect(() => {
    runtime.threadList.__internal_setAdapter(adapter);
  }, [runtime, adapter]);
  return useMemo(() => AssistantRuntimeImpl.create(runtime), [runtime]);
};
export {
  useRemoteThreadListRuntime
};
//# sourceMappingURL=useRemoteThreadListRuntime.mjs.map