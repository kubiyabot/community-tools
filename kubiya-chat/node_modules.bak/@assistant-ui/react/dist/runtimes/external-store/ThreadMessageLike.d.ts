import { MessageStatus, TextContentPart, ImageContentPart, ToolCallContentPart, UIContentPart, ThreadMessage, CompleteAttachment, FileContentPart, Unstable_AudioContentPart } from "../../types";
import { CoreToolCallContentPart, ThreadStep } from "../../types/AssistantTypes";
export type ThreadMessageLike = {
    readonly role: "assistant" | "user" | "system";
    readonly content: string | readonly (TextContentPart | ImageContentPart | FileContentPart | Unstable_AudioContentPart | ToolCallContentPart<any, any> | CoreToolCallContentPart<any, any> | UIContentPart)[];
    readonly id?: string | undefined;
    readonly createdAt?: Date | undefined;
    readonly status?: MessageStatus | undefined;
    readonly attachments?: readonly CompleteAttachment[] | undefined;
    readonly metadata?: {
        readonly unstable_data?: readonly Record<string, unknown>[] | undefined;
        readonly steps?: readonly ThreadStep[] | undefined;
        readonly custom?: Record<string, unknown> | undefined;
    } | undefined;
};
export declare const fromThreadMessageLike: (like: ThreadMessageLike, fallbackId: string, fallbackStatus: MessageStatus) => ThreadMessage;
//# sourceMappingURL=ThreadMessageLike.d.ts.map