{"version":3,"sources":["../../../src/runtimes/local/LocalRuntimeOptions.tsx"],"sourcesContent":["import { AttachmentAdapter } from \"../attachment/AttachmentAdapter\";\nimport { ThreadMessageLike } from \"../external-store\";\nimport { FeedbackAdapter } from \"../feedback/FeedbackAdapter\";\nimport { SpeechSynthesisAdapter } from \"../speech/SpeechAdapterTypes\";\nimport { ChatModelAdapter } from \"./ChatModelAdapter\";\n\nexport type LocalRuntimeOptionsBase = {\n  maxSteps?: number | undefined;\n  adapters: {\n    chatModel: ChatModelAdapter;\n    attachments?: AttachmentAdapter | undefined;\n    speech?: SpeechSynthesisAdapter | undefined;\n    feedback?: FeedbackAdapter | undefined;\n  };\n};\n\n// TODO align LocalRuntimeOptions with LocalRuntimeOptionsBase\nexport type LocalRuntimeOptions = Omit<LocalRuntimeOptionsBase, \"adapters\"> & {\n  initialMessages?: readonly ThreadMessageLike[] | undefined;\n  adapters?: Omit<LocalRuntimeOptionsBase[\"adapters\"], \"chatModel\"> | undefined;\n};\n\nexport const splitLocalRuntimeOptions = <T extends LocalRuntimeOptions>(\n  options: T,\n) => {\n  const { initialMessages, maxSteps, adapters, ...rest } = options;\n\n  return {\n    localRuntimeOptions: {\n      initialMessages,\n      maxSteps,\n      adapters,\n    },\n    otherOptions: rest,\n  };\n};\n"],"mappings":";AAsBO,IAAM,2BAA2B,CACtC,YACG;AACH,QAAM,EAAE,iBAAiB,UAAU,UAAU,GAAG,KAAK,IAAI;AAEzD,SAAO;AAAA,IACL,qBAAqB;AAAA,MACnB;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,IACA,cAAc;AAAA,EAChB;AACF;","names":[]}