{"version":3,"sources":["../../../src/runtimes/local/ChatModelAdapter.tsx"],"sourcesContent":["import type {\n  MessageStatus,\n  RunConfig,\n  TextContentPart,\n  ThreadAssistantContentPart,\n  ThreadMessage,\n  ThreadStep,\n  ToolCallContentPart,\n} from \"../../types/AssistantTypes\";\nimport type { ModelConfig } from \"../../types/ModelConfigTypes\";\n\nexport type ChatModelRunUpdate = {\n  content: ThreadAssistantContentPart[];\n  metadata?: Record<string, unknown>;\n};\n\nexport type ChatModelRunResult = {\n  content?: ThreadAssistantContentPart[] | undefined;\n  status?: MessageStatus | undefined;\n  metadata?: {\n    unstable_data?: unknown[] | undefined;\n    steps?: ThreadStep[] | undefined;\n    custom?: Record<string, unknown> | undefined;\n  };\n};\n\nexport type CoreChatModelRunResult = Omit<ChatModelRunResult, \"content\"> & {\n  content: (TextContentPart | ToolCallContentPart)[];\n};\n\nexport type ChatModelRunOptions = {\n  messages: ThreadMessage[];\n  runConfig: RunConfig;\n  abortSignal: AbortSignal;\n  config: ModelConfig;\n\n  unstable_assistantMessageId?: string;\n};\n\nexport type ChatModelAdapter = {\n  run: (\n    options: ChatModelRunOptions,\n  ) => Promise<ChatModelRunResult> | AsyncGenerator<ChatModelRunResult, void>;\n};\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAAA;","names":[]}