{"version":3,"sources":["../../../src/runtimes/speech/SpeechAdapterTypes.ts"],"sourcesContent":["import { Unsubscribe } from \"../../types\";\n\nexport namespace SpeechSynthesisAdapter {\n  export type Status =\n    | {\n        type: \"starting\" | \"running\";\n      }\n    | {\n        type: \"ended\";\n        reason: \"finished\" | \"cancelled\" | \"error\";\n        error?: unknown;\n      };\n\n  export type Utterance = {\n    status: Status;\n    cancel: () => void;\n    subscribe: (callback: () => void) => Unsubscribe;\n  };\n}\n\nexport type SpeechSynthesisAdapter = {\n  speak: (text: string) => SpeechSynthesisAdapter.Utterance;\n};\n\nexport namespace SpeechRecognitionAdapter {\n  export type Status =\n    | {\n        type: \"starting\" | \"running\";\n      }\n    | {\n        type: \"ended\";\n        reason: \"stopped\" | \"cancelled\" | \"error\";\n      };\n\n  export type Result = {\n    transcript: string;\n  };\n\n  export type Session = {\n    status: Status;\n    stop: () => Promise<void>;\n    cancel: () => void;\n    onSpeechStart: (callback: () => void) => Unsubscribe;\n    onSpeechEnd: (callback: (result: Result) => void) => Unsubscribe;\n    onSpeech: (callback: (result: Result) => void) => Unsubscribe;\n  };\n}\n\nexport type SpeechRecognitionAdapter = {\n  listen: () => SpeechRecognitionAdapter.Session;\n};\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAAA;","names":[]}