"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/context/stores/ThreadViewport.tsx
var ThreadViewport_exports = {};
__export(ThreadViewport_exports, {
  makeThreadViewportStore: () => makeThreadViewportStore
});
module.exports = __toCommonJS(ThreadViewport_exports);
var import_zustand = require("zustand");
var makeThreadViewportStore = () => {
  const scrollToBottomListeners = /* @__PURE__ */ new Set();
  return (0, import_zustand.create)(() => ({
    isAtBottom: true,
    scrollToBottom: () => {
      for (const listener of scrollToBottomListeners) {
        listener();
      }
    },
    onScrollToBottom: (callback) => {
      scrollToBottomListeners.add(callback);
      return () => {
        scrollToBottomListeners.delete(callback);
      };
    }
  }));
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  makeThreadViewportStore
});
//# sourceMappingURL=ThreadViewport.js.map