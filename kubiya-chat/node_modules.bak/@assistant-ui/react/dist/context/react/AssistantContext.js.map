{"version":3,"sources":["../../../src/context/react/AssistantContext.ts"],"sourcesContent":["\"use client\";\n\nimport { createContext } from \"react\";\nimport type { AssistantToolUIsState } from \"../stores/AssistantToolUIs\";\nimport { ReadonlyStore } from \"../ReadonlyStore\";\nimport { createContextHook } from \"./utils/createContextHook\";\nimport { createContextStoreHook } from \"./utils/createContextStoreHook\";\nimport { UseBoundStore } from \"zustand\";\nimport { AssistantRuntime } from \"../../api/AssistantRuntime\";\nimport { ThreadListState } from \"../../api/ThreadListRuntime\";\n\nexport type AssistantContextValue = {\n  useToolUIs: UseBoundStore<ReadonlyStore<AssistantToolUIsState>>;\n  useAssistantRuntime: UseBoundStore<ReadonlyStore<AssistantRuntime>>;\n  useThreadList: UseBoundStore<ReadonlyStore<ThreadListState>>;\n};\n\nexport const AssistantContext = createContext<AssistantContextValue | null>(\n  null,\n);\n\nexport const useAssistantContext = createContextHook(\n  AssistantContext,\n  \"AssistantRuntimeProvider\",\n);\n\nexport function useAssistantRuntime(options?: {\n  optional?: false | undefined;\n}): AssistantRuntime;\nexport function useAssistantRuntime(options?: {\n  optional?: boolean | undefined;\n}): AssistantRuntime | null;\nexport function useAssistantRuntime(options?: {\n  optional?: boolean | undefined;\n}) {\n  const context = useAssistantContext(options);\n  if (!context) return null;\n  return context.useAssistantRuntime();\n}\n\nexport const { useToolUIs, useToolUIsStore } = createContextStoreHook(\n  useAssistantContext,\n  \"useToolUIs\",\n);\n\nexport const { useThreadList } = createContextStoreHook(\n  useAssistantContext,\n  \"useThreadList\",\n);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,mBAA8B;AAG9B,+BAAkC;AAClC,oCAAuC;AAWhC,IAAM,uBAAmB;AAAA,EAC9B;AACF;AAEO,IAAM,0BAAsB;AAAA,EACjC;AAAA,EACA;AACF;AAQO,SAAS,oBAAoB,SAEjC;AACD,QAAM,UAAU,oBAAoB,OAAO;AAC3C,MAAI,CAAC,QAAS,QAAO;AACrB,SAAO,QAAQ,oBAAoB;AACrC;AAEO,IAAM,EAAE,YAAY,gBAAgB,QAAI;AAAA,EAC7C;AAAA,EACA;AACF;AAEO,IAAM,EAAE,cAAc,QAAI;AAAA,EAC/B;AAAA,EACA;AACF;","names":[]}