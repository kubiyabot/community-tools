"use strict";
"use client";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/context/react/ContentPartContext.ts
var ContentPartContext_exports = {};
__export(ContentPartContext_exports, {
  ContentPartContext: () => ContentPartContext,
  useContentPart: () => useContentPart,
  useContentPartContext: () => useContentPartContext,
  useContentPartRuntime: () => useContentPartRuntime
});
module.exports = __toCommonJS(ContentPartContext_exports);
var import_react = require("react");
var import_createContextStoreHook = require("./utils/createContextStoreHook.js");
var import_createContextHook = require("./utils/createContextHook.js");
var ContentPartContext = (0, import_react.createContext)(
  null
);
var useContentPartContext = (0, import_createContextHook.createContextHook)(
  ContentPartContext,
  "a component passed to <MessagePrimitive.Content components={...}>"
);
function useContentPartRuntime(options) {
  const context = useContentPartContext(options);
  if (!context) return null;
  return context.useContentPartRuntime();
}
var { useContentPart } = (0, import_createContextStoreHook.createContextStoreHook)(
  useContentPartContext,
  "useContentPart"
);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ContentPartContext,
  useContentPart,
  useContentPartContext,
  useContentPartRuntime
});
//# sourceMappingURL=ContentPartContext.js.map