{"version":3,"sources":["../../../src/context/react/ThreadContext.ts"],"sourcesContent":["\"use client\";\n\nimport { createContext, useEffect, useState } from \"react\";\nimport type { ThreadViewportState } from \"../stores/ThreadViewport\";\nimport { ReadonlyStore } from \"../ReadonlyStore\";\nimport { UseBoundStore } from \"zustand\";\nimport { createContextHook } from \"./utils/createContextHook\";\nimport { createContextStoreHook } from \"./utils/createContextStoreHook\";\nimport { ThreadRuntime } from \"../../api/ThreadRuntime\";\nimport { ThreadState } from \"../../api/ThreadRuntime\";\nimport { ModelConfig } from \"../../types\";\nimport { ThreadComposerState } from \"../../api/ComposerRuntime\";\n\nexport type ThreadContextValue = {\n  useThread: UseBoundStore<ReadonlyStore<ThreadState>>;\n  useThreadRuntime: UseBoundStore<ReadonlyStore<ThreadRuntime>>;\n  useComposer: UseBoundStore<ReadonlyStore<ThreadComposerState>>;\n  useViewport: UseBoundStore<ReadonlyStore<ThreadViewportState>>;\n};\n\nexport const ThreadContext = createContext<ThreadContextValue | null>(null);\n\nexport const useThreadContext = createContextHook(\n  ThreadContext,\n  \"AssistantRuntimeProvider\",\n);\n\nexport function useThreadRuntime(options?: {\n  optional?: false | undefined;\n}): ThreadRuntime;\nexport function useThreadRuntime(options?: {\n  optional?: boolean | undefined;\n}): ThreadRuntime | null;\nexport function useThreadRuntime(options?: { optional?: boolean | undefined }) {\n  const context = useThreadContext(options);\n  if (!context) return null;\n  return context.useThreadRuntime();\n}\n\nexport const { useThread } = createContextStoreHook(\n  useThreadContext,\n  \"useThread\",\n);\n\nexport const { useComposer: useThreadComposer } = createContextStoreHook(\n  useThreadContext,\n  \"useComposer\",\n);\n\nexport const {\n  useViewport: useThreadViewport,\n  useViewportStore: useThreadViewportStore,\n} = createContextStoreHook(useThreadContext, \"useViewport\");\n\nexport function useThreadModelConfig(options?: {\n  optional?: false | undefined;\n}): ModelConfig;\nexport function useThreadModelConfig(options?: {\n  optional?: boolean | undefined;\n}): ModelConfig | null;\nexport function useThreadModelConfig(options?: {\n  optional?: boolean | undefined;\n}): ModelConfig | null {\n  const [, rerender] = useState({});\n\n  const runtime = useThreadRuntime(options);\n  useEffect(() => {\n    return runtime?.unstable_on(\"model-config-update\", () => rerender({}));\n  }, [runtime]);\n\n  if (!runtime) return null;\n  return runtime?.getModelConfig();\n}\n"],"mappings":";;;AAEA,SAAS,eAAe,WAAW,gBAAgB;AAInD,SAAS,yBAAyB;AAClC,SAAS,8BAA8B;AAahC,IAAM,gBAAgB,cAAyC,IAAI;AAEnE,IAAM,mBAAmB;AAAA,EAC9B;AAAA,EACA;AACF;AAQO,SAAS,iBAAiB,SAA8C;AAC7E,QAAM,UAAU,iBAAiB,OAAO;AACxC,MAAI,CAAC,QAAS,QAAO;AACrB,SAAO,QAAQ,iBAAiB;AAClC;AAEO,IAAM,EAAE,UAAU,IAAI;AAAA,EAC3B;AAAA,EACA;AACF;AAEO,IAAM,EAAE,aAAa,kBAAkB,IAAI;AAAA,EAChD;AAAA,EACA;AACF;AAEO,IAAM;AAAA,EACX,aAAa;AAAA,EACb,kBAAkB;AACpB,IAAI,uBAAuB,kBAAkB,aAAa;AAQnD,SAAS,qBAAqB,SAEd;AACrB,QAAM,CAAC,EAAE,QAAQ,IAAI,SAAS,CAAC,CAAC;AAEhC,QAAM,UAAU,iBAAiB,OAAO;AACxC,YAAU,MAAM;AACd,WAAO,SAAS,YAAY,uBAAuB,MAAM,SAAS,CAAC,CAAC,CAAC;AAAA,EACvE,GAAG,CAAC,OAAO,CAAC;AAEZ,MAAI,CAAC,QAAS,QAAO;AACrB,SAAO,SAAS,eAAe;AACjC;","names":[]}