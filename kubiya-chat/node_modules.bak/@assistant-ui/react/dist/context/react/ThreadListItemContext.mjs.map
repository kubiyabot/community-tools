{"version":3,"sources":["../../../src/context/react/ThreadListItemContext.ts"],"sourcesContent":["\"use client\";\n\nimport { createContext } from \"react\";\nimport { ReadonlyStore } from \"../ReadonlyStore\";\nimport { createContextStoreHook } from \"./utils/createContextStoreHook\";\nimport { createContextHook } from \"./utils/createContextHook\";\nimport { UseBoundStore } from \"zustand\";\nimport { ThreadListItemRuntime } from \"../../api/ThreadListItemRuntime\";\nimport { ThreadListItemState } from \"../../api/ThreadListItemRuntime\";\n\nexport type ThreadListItemContextValue = {\n  useThreadListItemRuntime: UseBoundStore<ReadonlyStore<ThreadListItemRuntime>>;\n  useThreadListItem: UseBoundStore<ReadonlyStore<ThreadListItemState>>;\n};\n\nexport const ThreadListItemContext =\n  createContext<ThreadListItemContextValue | null>(null);\n\nexport const useThreadListItemContext = createContextHook(\n  ThreadListItemContext,\n  \"a component passed to <ThreadListPrimitive.Items components={...}>\",\n);\n\nexport function useThreadListItemRuntime(options?: {\n  optional?: false | undefined;\n}): ThreadListItemRuntime;\nexport function useThreadListItemRuntime(options?: {\n  optional?: boolean | undefined;\n}): ThreadListItemRuntime | null;\nexport function useThreadListItemRuntime(options?: {\n  optional?: boolean | undefined;\n}) {\n  const context = useThreadListItemContext(options);\n  if (!context) return null;\n  return context.useThreadListItemRuntime();\n}\n\nexport const { useThreadListItem } = createContextStoreHook(\n  useThreadListItemContext,\n  \"useThreadListItem\",\n);\n"],"mappings":";;;AAEA,SAAS,qBAAqB;AAE9B,SAAS,8BAA8B;AACvC,SAAS,yBAAyB;AAU3B,IAAM,wBACX,cAAiD,IAAI;AAEhD,IAAM,2BAA2B;AAAA,EACtC;AAAA,EACA;AACF;AAQO,SAAS,yBAAyB,SAEtC;AACD,QAAM,UAAU,yBAAyB,OAAO;AAChD,MAAI,CAAC,QAAS,QAAO;AACrB,SAAO,QAAQ,yBAAyB;AAC1C;AAEO,IAAM,EAAE,kBAAkB,IAAI;AAAA,EACnC;AAAA,EACA;AACF;","names":[]}