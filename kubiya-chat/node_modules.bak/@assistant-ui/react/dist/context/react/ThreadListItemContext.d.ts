import { ReadonlyStore } from "../ReadonlyStore";
import { UseBoundStore } from "zustand";
import { ThreadListItemRuntime } from "../../api/ThreadListItemRuntime";
import { ThreadListItemState } from "../../api/ThreadListItemRuntime";
export type ThreadListItemContextValue = {
    useThreadListItemRuntime: UseBoundStore<ReadonlyStore<ThreadListItemRuntime>>;
    useThreadListItem: UseBoundStore<ReadonlyStore<ThreadListItemState>>;
};
export declare const ThreadListItemContext: import("react").Context<ThreadListItemContextValue | null>;
export declare const useThreadListItemContext: {
    (options?: {
        optional?: false | undefined;
    } | undefined): ThreadListItemContextValue;
    (options?: {
        optional?: boolean | undefined;
    } | undefined): ThreadListItemContextValue | null;
};
export declare function useThreadListItemRuntime(options?: {
    optional?: false | undefined;
}): ThreadListItemRuntime;
export declare function useThreadListItemRuntime(options?: {
    optional?: boolean | undefined;
}): ThreadListItemRuntime | null;
export declare const useThreadListItem: {
    (): ThreadListItemState;
    <TSelected>(selector: (state: ThreadListItemState) => TSelected): TSelected;
    (options: {
        optional: true;
    }): ThreadListItemState | null;
    <TSelected>(options: {
        optional: true;
        selector?: (state: ThreadListItemState) => TSelected;
    }): TSelected | null;
};
//# sourceMappingURL=ThreadListItemContext.d.ts.map