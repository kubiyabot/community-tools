"use strict";
"use client";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/context/providers/TextContentPartProvider.tsx
var TextContentPartProvider_exports = {};
__export(TextContentPartProvider_exports, {
  TextContentPartProvider: () => TextContentPartProvider
});
module.exports = __toCommonJS(TextContentPartProvider_exports);
var import_react = require("react");
var import_zustand = require("zustand");
var import_ContentPartContext = require("../react/ContentPartContext.js");
var import_ReadonlyStore = require("../ReadonlyStore.js");
var import_ContentPartRuntime = require("../../api/ContentPartRuntime.js");
var import_jsx_runtime = require("react/jsx-runtime");
var COMPLETE_STATUS = {
  type: "complete"
};
var RUNNING_STATUS = {
  type: "running"
};
var TextContentPartProvider = ({
  children,
  text,
  isRunning
}) => {
  const [context] = (0, import_react.useState)(() => {
    const useContentPart = (0, import_zustand.create)(() => ({
      status: isRunning ? RUNNING_STATUS : COMPLETE_STATUS,
      type: "text",
      text
    }));
    const useContentPartRuntime = (0, import_zustand.create)(
      () => new import_ContentPartRuntime.ContentPartRuntimeImpl({
        path: {
          ref: "text",
          threadSelector: { type: "main" },
          messageSelector: { type: "messageId", messageId: "" },
          contentPartSelector: { type: "index", index: 0 }
        },
        getState: useContentPart.getState,
        subscribe: useContentPart.subscribe
      })
    );
    return { useContentPartRuntime, useContentPart };
  });
  (0, import_react.useEffect)(() => {
    const state = context.useContentPart.getState();
    const textUpdated = state.text !== text;
    const targetStatus = isRunning ? RUNNING_STATUS : COMPLETE_STATUS;
    const statusUpdated = state.status !== targetStatus;
    if (!textUpdated && !statusUpdated) return;
    (0, import_ReadonlyStore.writableStore)(context.useContentPart).setState(
      {
        type: "text",
        text,
        status: targetStatus
      },
      true
    );
  }, [context, isRunning, text]);
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_ContentPartContext.ContentPartContext.Provider, { value: context, children });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  TextContentPartProvider
});
//# sourceMappingURL=TextContentPartProvider.js.map