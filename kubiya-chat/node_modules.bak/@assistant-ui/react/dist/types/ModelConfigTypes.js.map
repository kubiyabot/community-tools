{"version":3,"sources":["../../src/types/ModelConfigTypes.ts"],"sourcesContent":["import { z } from \"zod\";\nimport type { JSONSchema7 } from \"json-schema\";\nimport { Unsubscribe } from \"./Unsubscribe\";\n\nexport const LanguageModelV1CallSettingsSchema = z.object({\n  maxTokens: z.number().int().positive().optional(),\n  temperature: z.number().optional(),\n  topP: z.number().optional(),\n  presencePenalty: z.number().optional(),\n  frequencyPenalty: z.number().optional(),\n  seed: z.number().int().optional(),\n  headers: z.record(z.string().optional()).optional(),\n});\n\nexport type LanguageModelV1CallSettings = z.infer<\n  typeof LanguageModelV1CallSettingsSchema\n>;\n\nexport const LanguageModelConfigSchema = z.object({\n  apiKey: z.string().optional(),\n  baseUrl: z.string().optional(),\n  modelName: z.string().optional(),\n});\n\nexport type LanguageModelConfig = z.infer<typeof LanguageModelConfigSchema>;\n\ntype ToolExecuteFunction<TArgs, TResult> = (\n  args: TArgs,\n  context: {\n    abortSignal: AbortSignal;\n  },\n) => TResult | Promise<TResult>;\n\nexport type Tool<\n  TArgs extends Record<string, unknown> = Record<string | number, unknown>,\n  TResult = unknown,\n> = {\n  description?: string | undefined;\n  parameters: z.ZodSchema<TArgs> | JSONSchema7;\n  execute?: ToolExecuteFunction<TArgs, TResult>;\n};\n\nexport type ModelConfig = {\n  priority?: number | undefined;\n  system?: string | undefined;\n  tools?: Record<string, Tool<any, any>> | undefined;\n  callSettings?: LanguageModelV1CallSettings | undefined;\n  config?: LanguageModelConfig | undefined;\n};\n\nexport type ModelConfigProvider = {\n  getModelConfig: () => ModelConfig;\n  subscribe?: (callback: () => void) => Unsubscribe;\n};\n\nexport const mergeModelConfigs = (\n  configSet: Set<ModelConfigProvider>,\n): ModelConfig => {\n  const configs = Array.from(configSet)\n    .map((c) => c.getModelConfig())\n    .sort((a, b) => (b.priority ?? 0) - (a.priority ?? 0));\n\n  return configs.reduce((acc, config) => {\n    if (config.system) {\n      if (acc.system) {\n        // TODO should the separator be configurable?\n        acc.system += `\\n\\n${config.system}`;\n      } else {\n        acc.system = config.system;\n      }\n    }\n    if (config.tools) {\n      for (const [name, tool] of Object.entries(config.tools)) {\n        if (acc.tools?.[name]) {\n          throw new Error(\n            `You tried to define a tool with the name ${name}, but it already exists.`,\n          );\n        }\n        if (!acc.tools) acc.tools = {};\n        acc.tools[name] = tool;\n      }\n    }\n    if (config.config) {\n      acc.config = {\n        ...acc.config,\n        ...config.config,\n      };\n    }\n    if (config.callSettings) {\n      acc.callSettings = {\n        ...acc.callSettings,\n        ...config.callSettings,\n      };\n    }\n    return acc;\n  }, {} as ModelConfig);\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAkB;AAIX,IAAM,oCAAoC,aAAE,OAAO;AAAA,EACxD,WAAW,aAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS;AAAA,EAChD,aAAa,aAAE,OAAO,EAAE,SAAS;AAAA,EACjC,MAAM,aAAE,OAAO,EAAE,SAAS;AAAA,EAC1B,iBAAiB,aAAE,OAAO,EAAE,SAAS;AAAA,EACrC,kBAAkB,aAAE,OAAO,EAAE,SAAS;AAAA,EACtC,MAAM,aAAE,OAAO,EAAE,IAAI,EAAE,SAAS;AAAA,EAChC,SAAS,aAAE,OAAO,aAAE,OAAO,EAAE,SAAS,CAAC,EAAE,SAAS;AACpD,CAAC;AAMM,IAAM,4BAA4B,aAAE,OAAO;AAAA,EAChD,QAAQ,aAAE,OAAO,EAAE,SAAS;AAAA,EAC5B,SAAS,aAAE,OAAO,EAAE,SAAS;AAAA,EAC7B,WAAW,aAAE,OAAO,EAAE,SAAS;AACjC,CAAC;AAiCM,IAAM,oBAAoB,CAC/B,cACgB;AAChB,QAAM,UAAU,MAAM,KAAK,SAAS,EACjC,IAAI,CAAC,MAAM,EAAE,eAAe,CAAC,EAC7B,KAAK,CAAC,GAAG,OAAO,EAAE,YAAY,MAAM,EAAE,YAAY,EAAE;AAEvD,SAAO,QAAQ,OAAO,CAAC,KAAK,WAAW;AACrC,QAAI,OAAO,QAAQ;AACjB,UAAI,IAAI,QAAQ;AAEd,YAAI,UAAU;AAAA;AAAA,EAAO,OAAO,MAAM;AAAA,MACpC,OAAO;AACL,YAAI,SAAS,OAAO;AAAA,MACtB;AAAA,IACF;AACA,QAAI,OAAO,OAAO;AAChB,iBAAW,CAAC,MAAM,IAAI,KAAK,OAAO,QAAQ,OAAO,KAAK,GAAG;AACvD,YAAI,IAAI,QAAQ,IAAI,GAAG;AACrB,gBAAM,IAAI;AAAA,YACR,4CAA4C,IAAI;AAAA,UAClD;AAAA,QACF;AACA,YAAI,CAAC,IAAI,MAAO,KAAI,QAAQ,CAAC;AAC7B,YAAI,MAAM,IAAI,IAAI;AAAA,MACpB;AAAA,IACF;AACA,QAAI,OAAO,QAAQ;AACjB,UAAI,SAAS;AAAA,QACX,GAAG,IAAI;AAAA,QACP,GAAG,OAAO;AAAA,MACZ;AAAA,IACF;AACA,QAAI,OAAO,cAAc;AACvB,UAAI,eAAe;AAAA,QACjB,GAAG,IAAI;AAAA,QACP,GAAG,OAAO;AAAA,MACZ;AAAA,IACF;AACA,WAAO;AAAA,EACT,GAAG,CAAC,CAAgB;AACtB;","names":[]}