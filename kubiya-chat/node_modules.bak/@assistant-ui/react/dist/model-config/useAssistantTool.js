"use strict";
"use client";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/model-config/useAssistantTool.tsx
var useAssistantTool_exports = {};
__export(useAssistantTool_exports, {
  useAssistantTool: () => useAssistantTool
});
module.exports = __toCommonJS(useAssistantTool_exports);
var import_react = require("react");
var import_AssistantContext = require("../context/react/AssistantContext.js");
var useAssistantTool = (tool) => {
  const assistantRuntime = (0, import_AssistantContext.useAssistantRuntime)();
  const toolUIsStore = (0, import_AssistantContext.useToolUIsStore)();
  (0, import_react.useEffect)(() => {
    return tool.render ? toolUIsStore.getState().setToolUI(tool.toolName, tool.render) : void 0;
  }, [toolUIsStore, tool.toolName, tool.render]);
  (0, import_react.useEffect)(() => {
    const { toolName, render, disabled, ...rest } = tool;
    if (disabled) return;
    const config = {
      tools: {
        [toolName]: rest
      }
    };
    return assistantRuntime.registerModelConfigProvider({
      getModelConfig: () => config
    });
  }, [assistantRuntime, tool]);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  useAssistantTool
});
//# sourceMappingURL=useAssistantTool.js.map