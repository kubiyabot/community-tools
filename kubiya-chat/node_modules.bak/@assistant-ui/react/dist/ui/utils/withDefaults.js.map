{"version":3,"sources":["../../../src/ui/utils/withDefaults.tsx"],"sourcesContent":["import { ComponentPropsWithoutRef, ElementType, forwardRef } from \"react\";\nimport classNames from \"classnames\";\nimport { ComponentRef } from \"react\";\n\nexport const withDefaultProps =\n  <TProps extends { className?: string }>({\n    className,\n    ...defaultProps\n  }: Partial<TProps>) =>\n  ({ className: classNameProp, ...props }: TProps) => {\n    return {\n      className: classNames(className, classNameProp),\n      ...defaultProps,\n      ...props,\n    } as TProps;\n  };\n\nexport const withDefaults = <TComponent extends ElementType>(\n  Component: TComponent,\n  defaultProps: Partial<ComponentPropsWithoutRef<TComponent>>,\n) => {\n  type TComponentProps = typeof defaultProps;\n  const getProps = withDefaultProps<TComponentProps>(defaultProps);\n  const WithDefaults = forwardRef<ComponentRef<TComponent>, TComponentProps>(\n    (props, ref) => {\n      const ComponentAsAny = Component as any;\n      return <ComponentAsAny {...getProps(props as any)} ref={ref} />;\n    },\n  );\n  WithDefaults.displayName =\n    \"withDefaults(\" +\n    (typeof Component === \"string\" ? Component : Component.displayName) +\n    \")\";\n  return WithDefaults;\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkE;AAClE,wBAAuB;AAyBV;AAtBN,IAAM,mBACX,CAAwC;AAAA,EACtC;AAAA,EACA,GAAG;AACL,MACA,CAAC,EAAE,WAAW,eAAe,GAAG,MAAM,MAAc;AAClD,SAAO;AAAA,IACL,eAAW,kBAAAA,SAAW,WAAW,aAAa;AAAA,IAC9C,GAAG;AAAA,IACH,GAAG;AAAA,EACL;AACF;AAEK,IAAM,eAAe,CAC1B,WACA,iBACG;AAEH,QAAM,WAAW,iBAAkC,YAAY;AAC/D,QAAM,mBAAe;AAAA,IACnB,CAAC,OAAO,QAAQ;AACd,YAAM,iBAAiB;AACvB,aAAO,4CAAC,kBAAgB,GAAG,SAAS,KAAY,GAAG,KAAU;AAAA,IAC/D;AAAA,EACF;AACA,eAAa,cACX,mBACC,OAAO,cAAc,WAAW,YAAY,UAAU,eACvD;AACF,SAAO;AACT;","names":["classNames"]}