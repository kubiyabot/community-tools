"use strict";
"use client";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/ui/thread-list.tsx
var thread_list_exports = {};
__export(thread_list_exports, {
  default: () => thread_list_default
});
module.exports = __toCommonJS(thread_list_exports);
var import_react = require("react");
var import_lucide_react = require("lucide-react");
var import_withDefaults = require("./utils/withDefaults.js");
var import_primitives = require("../primitives/index.js");
var import_thread_list_item = __toESM(require("./thread-list-item.js"));
var import_thread_config = require("./thread-config.js");
var import_base = require("./base/index.js");
var import_jsx_runtime = require("react/jsx-runtime");
var ThreadList = () => {
  return /* @__PURE__ */ (0, import_jsx_runtime.jsxs)(ThreadListRoot, { children: [
    /* @__PURE__ */ (0, import_jsx_runtime.jsx)(ThreadListNew, {}),
    /* @__PURE__ */ (0, import_jsx_runtime.jsx)(ThreadListItems, {})
  ] });
};
var ThreadListRoot = (0, import_withDefaults.withDefaults)("div", {
  className: "aui-root aui-thread-list-root"
});
ThreadListRoot.displayName = "ThreadListRoot";
var ThreadListNew = (0, import_react.forwardRef)((props, ref) => {
  const config = (0, import_thread_config.useThreadConfig)();
  const label = config.strings?.threadList?.new?.label ?? "New Thread";
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_primitives.ThreadListPrimitive.New, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime.jsxs)(
    import_base.Button,
    {
      ref,
      className: "aui-thread-list-new",
      variant: "ghost",
      ...props,
      children: [
        /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_lucide_react.PlusIcon, {}),
        label
      ]
    }
  ) });
});
ThreadListNew.displayName = "ThreadListNew";
var ThreadListItems = ({ components }) => {
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
    import_primitives.ThreadListPrimitive.Items,
    {
      components: {
        ...components,
        ThreadListItem: components?.ThreadListItem ?? import_thread_list_item.default
      }
    }
  );
};
ThreadListItems.displayName = "ThreadListItems";
var exports2 = {
  Root: ThreadListRoot,
  New: ThreadListNew,
  Items: ThreadListItems
};
var thread_list_default = Object.assign(ThreadList, exports2);
//# sourceMappingURL=thread-list.js.map