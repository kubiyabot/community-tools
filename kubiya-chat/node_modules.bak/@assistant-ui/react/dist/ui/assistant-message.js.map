{"version":3,"sources":["../../src/ui/assistant-message.tsx"],"sourcesContent":["\"use client\";\n\nimport { ComponentPropsWithoutRef, forwardRef, useMemo, type FC } from \"react\";\nimport { MessagePrimitive } from \"../primitives\";\nimport BranchPicker from \"./branch-picker\";\nimport { Avatar } from \"./base/avatar\";\nimport { withDefaults } from \"./utils/withDefaults\";\nimport { useThreadConfig } from \"./thread-config\";\nimport AssistantActionBar from \"./assistant-action-bar\";\nimport ContentPart from \"./content-part\";\n\nconst AssistantMessage: FC = () => {\n  return (\n    <AssistantMessageRoot>\n      <AssistantMessageAvatar />\n      <AssistantMessageContent />\n      <BranchPicker />\n      <AssistantActionBar />\n    </AssistantMessageRoot>\n  );\n};\n\nAssistantMessage.displayName = \"AssistantMessage\";\n\nconst AssistantMessageAvatar: FC = () => {\n  const { assistantAvatar: avatar = { fallback: \"A\" } } = useThreadConfig();\n  return <Avatar {...avatar} />;\n};\n\nconst AssistantMessageRoot = withDefaults(MessagePrimitive.Root, {\n  className: \"aui-assistant-message-root\",\n});\n\nAssistantMessageRoot.displayName = \"AssistantMessageRoot\";\n\nconst AssistantMessageContentWrapper = withDefaults(\"div\", {\n  className: \"aui-assistant-message-content\",\n});\n\nnamespace AssistantMessageContent {\n  export type Element = HTMLDivElement;\n  export type Props = MessagePrimitive.Content.Props &\n    ComponentPropsWithoutRef<\"div\">;\n}\n\nconst AssistantMessageContent = forwardRef<\n  AssistantMessageContent.Element,\n  AssistantMessageContent.Props\n>(({ components: componentsProp, ...rest }, ref) => {\n  const { tools, assistantMessage: { components = {} } = {} } =\n    useThreadConfig();\n\n  const toolsComponents = useMemo(\n    () => ({\n      by_name: !tools\n        ? undefined\n        : Object.fromEntries(\n            tools.map((t) => [\n              t.unstable_tool.toolName,\n              t.unstable_tool.render,\n            ]),\n          ),\n      Fallback: components.ToolFallback,\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [...(tools ?? []), components.ToolFallback],\n  );\n\n  return (\n    <AssistantMessageContentWrapper {...rest} ref={ref}>\n      <MessagePrimitive.Content\n        components={{\n          ...componentsProp,\n          Text: componentsProp?.Text ?? components.Text ?? ContentPart.Text,\n          Empty: componentsProp?.Empty ?? components.Empty,\n          tools: toolsComponents,\n        }}\n      />\n    </AssistantMessageContentWrapper>\n  );\n});\n\nAssistantMessageContent.displayName = \"AssistantMessageContent\";\n\nconst exports = {\n  Root: AssistantMessageRoot,\n  Avatar: AssistantMessageAvatar,\n  Content: AssistantMessageContent,\n};\n\nexport default Object.assign(\n  AssistantMessage,\n  exports,\n) as typeof AssistantMessage & typeof exports;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,mBAAuE;AACvE,wBAAiC;AACjC,2BAAyB;AACzB,oBAAuB;AACvB,0BAA6B;AAC7B,2BAAgC;AAChC,kCAA+B;AAC/B,0BAAwB;AAIpB;AAFJ,IAAM,mBAAuB,MAAM;AACjC,SACE,6CAAC,wBACC;AAAA,gDAAC,0BAAuB;AAAA,IACxB,4CAAC,2BAAwB;AAAA,IACzB,4CAAC,qBAAAA,SAAA,EAAa;AAAA,IACd,4CAAC,4BAAAC,SAAA,EAAmB;AAAA,KACtB;AAEJ;AAEA,iBAAiB,cAAc;AAE/B,IAAM,yBAA6B,MAAM;AACvC,QAAM,EAAE,iBAAiB,SAAS,EAAE,UAAU,IAAI,EAAE,QAAI,sCAAgB;AACxE,SAAO,4CAAC,wBAAQ,GAAG,QAAQ;AAC7B;AAEA,IAAM,2BAAuB,kCAAa,mCAAiB,MAAM;AAAA,EAC/D,WAAW;AACb,CAAC;AAED,qBAAqB,cAAc;AAEnC,IAAM,qCAAiC,kCAAa,OAAO;AAAA,EACzD,WAAW;AACb,CAAC;AAQD,IAAM,8BAA0B,yBAG9B,CAAC,EAAE,YAAY,gBAAgB,GAAG,KAAK,GAAG,QAAQ;AAClD,QAAM,EAAE,OAAO,kBAAkB,EAAE,aAAa,CAAC,EAAE,IAAI,CAAC,EAAE,QACxD,sCAAgB;AAElB,QAAM,sBAAkB;AAAA,IACtB,OAAO;AAAA,MACL,SAAS,CAAC,QACN,SACA,OAAO;AAAA,QACL,MAAM,IAAI,CAAC,MAAM;AAAA,UACf,EAAE,cAAc;AAAA,UAChB,EAAE,cAAc;AAAA,QAClB,CAAC;AAAA,MACH;AAAA,MACJ,UAAU,WAAW;AAAA,IACvB;AAAA;AAAA,IAEA,CAAC,GAAI,SAAS,CAAC,GAAI,WAAW,YAAY;AAAA,EAC5C;AAEA,SACE,4CAAC,kCAAgC,GAAG,MAAM,KACxC;AAAA,IAAC,mCAAiB;AAAA,IAAjB;AAAA,MACC,YAAY;AAAA,QACV,GAAG;AAAA,QACH,MAAM,gBAAgB,QAAQ,WAAW,QAAQ,oBAAAC,QAAY;AAAA,QAC7D,OAAO,gBAAgB,SAAS,WAAW;AAAA,QAC3C,OAAO;AAAA,MACT;AAAA;AAAA,EACF,GACF;AAEJ,CAAC;AAED,wBAAwB,cAAc;AAEtC,IAAMC,WAAU;AAAA,EACd,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,SAAS;AACX;AAEA,IAAO,4BAAQ,OAAO;AAAA,EACpB;AAAA,EACAA;AACF;","names":["BranchPicker","AssistantActionBar","ContentPart","exports"]}