{"version":3,"sources":["../../src/ui/thread-list-item.tsx"],"sourcesContent":["\"use client\";\n\nimport { ComponentPropsWithoutRef, forwardRef, type FC } from \"react\";\nimport { ArchiveIcon } from \"lucide-react\";\n\nimport { withDefaults } from \"./utils/withDefaults\";\nimport { TooltipIconButton } from \"./base/tooltip-icon-button\";\nimport { ThreadListItemPrimitive } from \"../primitives\";\nimport { useThreadConfig } from \"./thread-config\";\nimport classNames from \"classnames\";\n\nconst ThreadListItem: FC = () => {\n  return (\n    <ThreadListItemRoot>\n      <ThreadListItemTrigger>\n        <ThreadListItemTitle />\n      </ThreadListItemTrigger>\n      <ThreadListItemArchive />\n    </ThreadListItemRoot>\n  );\n};\n\nconst ThreadListItemRoot = withDefaults(ThreadListItemPrimitive.Root, {\n  className: \"aui-thread-list-item\",\n});\n\nThreadListItemRoot.displayName = \"ThreadListItemRoot\";\n\nconst ThreadListItemTrigger = withDefaults(ThreadListItemPrimitive.Trigger, {\n  className: \"aui-thread-list-item-trigger\",\n});\n\nnamespace ThreadListItemPrimitiveTitle {\n  export type Element = HTMLParagraphElement;\n  export type Props = ComponentPropsWithoutRef<\"p\">;\n}\n\nconst ThreadListItemTitle = forwardRef<\n  ThreadListItemPrimitiveTitle.Element,\n  ThreadListItemPrimitiveTitle.Props\n>(({ className, ...props }, ref) => {\n  const config = useThreadConfig();\n  const fallback =\n    config.strings?.threadList?.item?.title?.fallback ?? \"New Chat\";\n\n  return (\n    <p\n      ref={ref}\n      className={classNames(\"aui-thread-list-item-title\", className)}\n      {...props}\n    >\n      <ThreadListItemPrimitive.Title fallback={fallback} />\n    </p>\n  );\n});\n\nThreadListItemTitle.displayName = \"ThreadListItemTitle\";\n\nconst ThreadListItemArchive = forwardRef<\n  HTMLButtonElement,\n  Partial<TooltipIconButton.Props>\n>(({ className, ...props }, ref) => {\n  const config = useThreadConfig();\n  const tooltip =\n    config.strings?.threadList?.item?.archive?.tooltip ?? \"Archive thread\";\n\n  return (\n    <ThreadListItemPrimitive.Archive asChild>\n      <TooltipIconButton\n        ref={ref}\n        className={classNames(\"aui-thread-list-item-archive\", className)}\n        variant=\"ghost\"\n        tooltip={tooltip}\n        {...props}\n      >\n        <ArchiveIcon />\n      </TooltipIconButton>\n    </ThreadListItemPrimitive.Archive>\n  );\n});\n\nThreadListItemArchive.displayName = \"ThreadListItemArchive\";\n\nconst exports = {\n  Root: ThreadListItemRoot,\n  Title: ThreadListItemTitle,\n  Archive: ThreadListItemArchive,\n};\n\nexport default Object.assign(ThreadListItem, exports) as typeof ThreadListItem &\n  typeof exports;\n"],"mappings":";;;AAEA,SAAmC,kBAA2B;AAC9D,SAAS,mBAAmB;AAE5B,SAAS,oBAAoB;AAC7B,SAAS,yBAAyB;AAClC,SAAS,+BAA+B;AACxC,SAAS,uBAAuB;AAChC,OAAO,gBAAgB;AAInB,SAEI,KAFJ;AAFJ,IAAM,iBAAqB,MAAM;AAC/B,SACE,qBAAC,sBACC;AAAA,wBAAC,yBACC,8BAAC,uBAAoB,GACvB;AAAA,IACA,oBAAC,yBAAsB;AAAA,KACzB;AAEJ;AAEA,IAAM,qBAAqB,aAAa,wBAAwB,MAAM;AAAA,EACpE,WAAW;AACb,CAAC;AAED,mBAAmB,cAAc;AAEjC,IAAM,wBAAwB,aAAa,wBAAwB,SAAS;AAAA,EAC1E,WAAW;AACb,CAAC;AAOD,IAAM,sBAAsB,WAG1B,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAAQ;AAClC,QAAM,SAAS,gBAAgB;AAC/B,QAAM,WACJ,OAAO,SAAS,YAAY,MAAM,OAAO,YAAY;AAEvD,SACE;AAAA,IAAC;AAAA;AAAA,MACC;AAAA,MACA,WAAW,WAAW,8BAA8B,SAAS;AAAA,MAC5D,GAAG;AAAA,MAEJ,8BAAC,wBAAwB,OAAxB,EAA8B,UAAoB;AAAA;AAAA,EACrD;AAEJ,CAAC;AAED,oBAAoB,cAAc;AAElC,IAAM,wBAAwB,WAG5B,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAAQ;AAClC,QAAM,SAAS,gBAAgB;AAC/B,QAAM,UACJ,OAAO,SAAS,YAAY,MAAM,SAAS,WAAW;AAExD,SACE,oBAAC,wBAAwB,SAAxB,EAAgC,SAAO,MACtC;AAAA,IAAC;AAAA;AAAA,MACC;AAAA,MACA,WAAW,WAAW,gCAAgC,SAAS;AAAA,MAC/D,SAAQ;AAAA,MACR;AAAA,MACC,GAAG;AAAA,MAEJ,8BAAC,eAAY;AAAA;AAAA,EACf,GACF;AAEJ,CAAC;AAED,sBAAsB,cAAc;AAEpC,IAAM,UAAU;AAAA,EACd,MAAM;AAAA,EACN,OAAO;AAAA,EACP,SAAS;AACX;AAEA,IAAO,2BAAQ,OAAO,OAAO,gBAAgB,OAAO;","names":[]}