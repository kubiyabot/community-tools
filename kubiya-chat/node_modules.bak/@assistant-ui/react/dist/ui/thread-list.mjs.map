{"version":3,"sources":["../../src/ui/thread-list.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef, type FC } from \"react\";\nimport { PlusIcon } from \"lucide-react\";\n\nimport { withDefaults } from \"./utils/withDefaults\";\nimport { ThreadListPrimitive } from \"../primitives\";\nimport ThreadListItem from \"./thread-list-item\";\nimport { useThreadConfig } from \"./thread-config\";\nimport { Button, ButtonProps } from \"./base\";\n\nconst ThreadList: FC = () => {\n  return (\n    <ThreadListRoot>\n      <ThreadListNew />\n      <ThreadListItems />\n    </ThreadListRoot>\n  );\n};\n\nconst ThreadListRoot = withDefaults(\"div\", {\n  className: \"aui-root aui-thread-list-root\",\n});\nThreadListRoot.displayName = \"ThreadListRoot\";\n\nconst ThreadListNew = forwardRef<\n  HTMLButtonElement,\n  ThreadListPrimitive.New.Props & ButtonProps\n>((props, ref) => {\n  const config = useThreadConfig();\n  const label = config.strings?.threadList?.new?.label ?? \"New Thread\";\n\n  return (\n    <ThreadListPrimitive.New asChild>\n      <Button\n        ref={ref}\n        className=\"aui-thread-list-new\"\n        variant=\"ghost\"\n        {...props}\n      >\n        <PlusIcon />\n        {label}\n      </Button>\n    </ThreadListPrimitive.New>\n  );\n});\nThreadListNew.displayName = \"ThreadListNew\";\n\nnamespace ThreadListItems {\n  export type Props = {\n    /**\n     * Optional custom components to override default thread list items\n     */\n    components?: Partial<ThreadListPrimitive.Items.Props[\"components\"]>;\n  };\n}\n\nconst ThreadListItems: FC<ThreadListItems.Props> = ({ components }) => {\n  return (\n    <ThreadListPrimitive.Items\n      components={{\n        ...components,\n        ThreadListItem: components?.ThreadListItem ?? ThreadListItem,\n      }}\n    />\n  );\n};\n\nThreadListItems.displayName = \"ThreadListItems\";\n\nconst exports = {\n  Root: ThreadListRoot,\n  New: ThreadListNew,\n  Items: ThreadListItems,\n};\n\nexport default Object.assign(ThreadList, exports) as typeof ThreadList &\n  typeof exports;\n"],"mappings":";;;AAEA,SAAS,kBAA2B;AACpC,SAAS,gBAAgB;AAEzB,SAAS,oBAAoB;AAC7B,SAAS,2BAA2B;AACpC,OAAO,oBAAoB;AAC3B,SAAS,uBAAuB;AAChC,SAAS,cAA2B;AAIhC,SACE,KADF;AAFJ,IAAM,aAAiB,MAAM;AAC3B,SACE,qBAAC,kBACC;AAAA,wBAAC,iBAAc;AAAA,IACf,oBAAC,mBAAgB;AAAA,KACnB;AAEJ;AAEA,IAAM,iBAAiB,aAAa,OAAO;AAAA,EACzC,WAAW;AACb,CAAC;AACD,eAAe,cAAc;AAE7B,IAAM,gBAAgB,WAGpB,CAAC,OAAO,QAAQ;AAChB,QAAM,SAAS,gBAAgB;AAC/B,QAAM,QAAQ,OAAO,SAAS,YAAY,KAAK,SAAS;AAExD,SACE,oBAAC,oBAAoB,KAApB,EAAwB,SAAO,MAC9B;AAAA,IAAC;AAAA;AAAA,MACC;AAAA,MACA,WAAU;AAAA,MACV,SAAQ;AAAA,MACP,GAAG;AAAA,MAEJ;AAAA,4BAAC,YAAS;AAAA,QACT;AAAA;AAAA;AAAA,EACH,GACF;AAEJ,CAAC;AACD,cAAc,cAAc;AAW5B,IAAM,kBAA6C,CAAC,EAAE,WAAW,MAAM;AACrE,SACE;AAAA,IAAC,oBAAoB;AAAA,IAApB;AAAA,MACC,YAAY;AAAA,QACV,GAAG;AAAA,QACH,gBAAgB,YAAY,kBAAkB;AAAA,MAChD;AAAA;AAAA,EACF;AAEJ;AAEA,gBAAgB,cAAc;AAE9B,IAAM,UAAU;AAAA,EACd,MAAM;AAAA,EACN,KAAK;AAAA,EACL,OAAO;AACT;AAEA,IAAO,sBAAQ,OAAO,OAAO,YAAY,OAAO;","names":[]}