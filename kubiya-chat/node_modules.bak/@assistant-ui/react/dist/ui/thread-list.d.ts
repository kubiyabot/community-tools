import { type FC } from "react";
import { ThreadListPrimitive } from "../primitives";
declare const ThreadList: FC;
declare namespace ThreadListItems {
    type Props = {
        /**
         * Optional custom components to override default thread list items
         */
        components?: Partial<ThreadListPrimitive.Items.Props["components"]>;
    };
}
declare const ThreadListItems: FC<ThreadListItems.Props>;
declare const exports: {
    Root: import("react").ForwardRefExoticComponent<Partial<Omit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref">> & import("react").RefAttributes<HTMLDivElement>>;
    New: import("react").ForwardRefExoticComponent<Omit<import("react").ClassAttributes<HTMLButtonElement> & import("react").ButtonHTMLAttributes<HTMLButtonElement> & {
        asChild?: boolean;
    }, "ref"> & import("class-variance-authority").VariantProps<(props?: ({
        variant?: "default" | "outline" | "ghost" | null | undefined;
        size?: "default" | "icon" | null | undefined;
    } & import("class-variance-authority/types").ClassProp) | undefined) => string> & import("react").RefAttributes<HTMLButtonElement>>;
    Items: FC<ThreadListItems.Props>;
};
declare const _default: typeof ThreadList & typeof exports;
export default _default;
//# sourceMappingURL=thread-list.d.ts.map