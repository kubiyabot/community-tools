{"version":3,"sources":["../../src/ui/edit-composer.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef, type FC } from \"react\";\n\nimport { Button, ButtonProps } from \"./base/button\";\nimport { withDefaults } from \"./utils/withDefaults\";\nimport { useThreadConfig } from \"./thread-config\";\nimport { ComposerPrimitive } from \"../primitives\";\n\nconst EditComposer: FC = () => {\n  return (\n    <EditComposerRoot>\n      <EditComposerInput />\n\n      <EditComposerFooter>\n        <EditComposerCancel />\n        <EditComposerSend />\n      </EditComposerFooter>\n    </EditComposerRoot>\n  );\n};\n\nEditComposer.displayName = \"EditComposer\";\n\nconst EditComposerRoot = withDefaults(ComposerPrimitive.Root, {\n  className: \"aui-edit-composer-root\",\n});\n\nEditComposerRoot.displayName = \"EditComposerRoot\";\n\nconst EditComposerInput = withDefaults(ComposerPrimitive.Input, {\n  className: \"aui-edit-composer-input\",\n});\n\nEditComposerInput.displayName = \"EditComposerInput\";\n\nconst EditComposerFooter = withDefaults(\"div\", {\n  className: \"aui-edit-composer-footer\",\n});\n\nEditComposerFooter.displayName = \"EditComposerFooter\";\n\nnamespace EditComposerCancel {\n  export type Element = HTMLButtonElement;\n  export type Props = Partial<ButtonProps>;\n}\n\nconst EditComposerCancel = forwardRef<\n  EditComposerCancel.Element,\n  EditComposerCancel.Props\n>((props, ref) => {\n  const {\n    strings: { editComposer: { cancel: { label = \"Cancel\" } = {} } = {} } = {},\n  } = useThreadConfig();\n  return (\n    <ComposerPrimitive.Cancel asChild>\n      <Button variant=\"ghost\" {...props} ref={ref}>\n        {props.children ?? label}\n      </Button>\n    </ComposerPrimitive.Cancel>\n  );\n});\n\nEditComposerCancel.displayName = \"EditComposerCancel\";\n\nnamespace EditComposerSend {\n  export type Element = HTMLButtonElement;\n  export type Props = Partial<ButtonProps>;\n}\n\nconst EditComposerSend = forwardRef<\n  EditComposerSend.Element,\n  EditComposerSend.Props\n>((props, ref) => {\n  const {\n    strings: { editComposer: { send: { label = \"Send\" } = {} } = {} } = {},\n  } = useThreadConfig();\n  return (\n    <ComposerPrimitive.Send asChild>\n      <Button {...props} ref={ref}>\n        {props.children ?? label}\n      </Button>\n    </ComposerPrimitive.Send>\n  );\n});\n\nEditComposerSend.displayName = \"EditComposerSend\";\n\nconst exports = {\n  Root: EditComposerRoot,\n  Input: EditComposerInput,\n  Footer: EditComposerFooter,\n  Cancel: EditComposerCancel,\n  Send: EditComposerSend,\n};\n\nexport default Object.assign(EditComposer, exports) as typeof EditComposer &\n  typeof exports;\n"],"mappings":";;;AAEA,SAAS,kBAA2B;AAEpC,SAAS,cAA2B;AACpC,SAAS,oBAAoB;AAC7B,SAAS,uBAAuB;AAChC,SAAS,yBAAyB;AAK5B,cAEA,YAFA;AAHN,IAAM,eAAmB,MAAM;AAC7B,SACE,qBAAC,oBACC;AAAA,wBAAC,qBAAkB;AAAA,IAEnB,qBAAC,sBACC;AAAA,0BAAC,sBAAmB;AAAA,MACpB,oBAAC,oBAAiB;AAAA,OACpB;AAAA,KACF;AAEJ;AAEA,aAAa,cAAc;AAE3B,IAAM,mBAAmB,aAAa,kBAAkB,MAAM;AAAA,EAC5D,WAAW;AACb,CAAC;AAED,iBAAiB,cAAc;AAE/B,IAAM,oBAAoB,aAAa,kBAAkB,OAAO;AAAA,EAC9D,WAAW;AACb,CAAC;AAED,kBAAkB,cAAc;AAEhC,IAAM,qBAAqB,aAAa,OAAO;AAAA,EAC7C,WAAW;AACb,CAAC;AAED,mBAAmB,cAAc;AAOjC,IAAM,qBAAqB,WAGzB,CAAC,OAAO,QAAQ;AAChB,QAAM;AAAA,IACJ,SAAS,EAAE,cAAc,EAAE,QAAQ,EAAE,QAAQ,SAAS,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC;AAAA,EAC3E,IAAI,gBAAgB;AACpB,SACE,oBAAC,kBAAkB,QAAlB,EAAyB,SAAO,MAC/B,8BAAC,UAAO,SAAQ,SAAS,GAAG,OAAO,KAChC,gBAAM,YAAY,OACrB,GACF;AAEJ,CAAC;AAED,mBAAmB,cAAc;AAOjC,IAAM,mBAAmB,WAGvB,CAAC,OAAO,QAAQ;AAChB,QAAM;AAAA,IACJ,SAAS,EAAE,cAAc,EAAE,MAAM,EAAE,QAAQ,OAAO,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC;AAAA,EACvE,IAAI,gBAAgB;AACpB,SACE,oBAAC,kBAAkB,MAAlB,EAAuB,SAAO,MAC7B,8BAAC,UAAQ,GAAG,OAAO,KAChB,gBAAM,YAAY,OACrB,GACF;AAEJ,CAAC;AAED,iBAAiB,cAAc;AAE/B,IAAM,UAAU;AAAA,EACd,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,MAAM;AACR;AAEA,IAAO,wBAAQ,OAAO,OAAO,cAAc,OAAO;","names":[]}