{"version":3,"sources":["../../src/ui/branch-picker.tsx"],"sourcesContent":["\"use client\";\n\nimport { ComponentPropsWithoutRef, forwardRef, type FC } from \"react\";\nimport { ChevronLeftIcon, ChevronRightIcon } from \"lucide-react\";\n\nimport { TooltipIconButton } from \"./base/tooltip-icon-button\";\nimport { withDefaults } from \"./utils/withDefaults\";\nimport { useThreadConfig } from \"./thread-config\";\nimport { BranchPickerPrimitive } from \"../primitives\";\nimport { useThread } from \"../context\";\n\nconst useAllowBranchPicker = (ensureCapability = false) => {\n  const { branchPicker: { allowBranchPicker = true } = {} } = useThreadConfig();\n  const branchPickerSupported = useThread((t) => t.capabilities.edit);\n  return allowBranchPicker && (!ensureCapability || branchPickerSupported);\n};\n\nconst BranchPicker: FC = () => {\n  const allowBranchPicker = useAllowBranchPicker(true);\n  if (!allowBranchPicker) return null;\n  return (\n    <BranchPickerRoot hideWhenSingleBranch>\n      <BranchPickerPrevious />\n      <BranchPickerState />\n      <BranchPickerNext />\n    </BranchPickerRoot>\n  );\n};\n\nBranchPicker.displayName = \"BranchPicker\";\n\nconst BranchPickerRoot = withDefaults(BranchPickerPrimitive.Root, {\n  className: \"aui-branch-picker-root\",\n});\n\nBranchPickerRoot.displayName = \"BranchPickerRoot\";\n\nnamespace BranchPickerPrevious {\n  export type Element = BranchPickerPrimitive.Previous.Element;\n  export type Props = Partial<TooltipIconButton.Props>;\n}\n\nconst BranchPickerPrevious = forwardRef<\n  BranchPickerPrevious.Element,\n  BranchPickerPrevious.Props\n>((props, ref) => {\n  const {\n    strings: {\n      branchPicker: { previous: { tooltip = \"Previous\" } = {} } = {},\n    } = {},\n  } = useThreadConfig();\n  const allowBranchPicker = useAllowBranchPicker();\n  return (\n    <BranchPickerPrimitive.Previous disabled={!allowBranchPicker} asChild>\n      <TooltipIconButton tooltip={tooltip} {...props} ref={ref}>\n        {props.children ?? <ChevronLeftIcon />}\n      </TooltipIconButton>\n    </BranchPickerPrimitive.Previous>\n  );\n});\n\nBranchPickerPrevious.displayName = \"BranchPickerPrevious\";\n\nconst BranchPickerStateWrapper = withDefaults(\"span\", {\n  className: \"aui-branch-picker-state\",\n});\n\nnamespace BranchPickerState {\n  export type Element = HTMLSpanElement;\n  export type Props = ComponentPropsWithoutRef<\"span\">;\n}\n\nconst BranchPickerState = forwardRef<\n  BranchPickerState.Element,\n  BranchPickerState.Props\n>((props, ref) => {\n  return (\n    <BranchPickerStateWrapper {...props} ref={ref}>\n      <BranchPickerPrimitive.Number /> / <BranchPickerPrimitive.Count />\n    </BranchPickerStateWrapper>\n  );\n});\n\nBranchPickerState.displayName = \"BranchPickerState\";\n\nnamespace BranchPickerNext {\n  export type Element = BranchPickerPrimitive.Next.Element;\n  export type Props = Partial<TooltipIconButton.Props>;\n}\n\nconst BranchPickerNext = forwardRef<\n  BranchPickerNext.Element,\n  BranchPickerNext.Props\n>((props, ref) => {\n  const {\n    strings: { branchPicker: { next: { tooltip = \"Next\" } = {} } = {} } = {},\n  } = useThreadConfig();\n  const allowBranchPicker = useAllowBranchPicker();\n  return (\n    <BranchPickerPrimitive.Next disabled={!allowBranchPicker} asChild>\n      <TooltipIconButton tooltip={tooltip} {...props} ref={ref}>\n        {props.children ?? <ChevronRightIcon />}\n      </TooltipIconButton>\n    </BranchPickerPrimitive.Next>\n  );\n});\n\nBranchPickerNext.displayName = \"BranchPickerNext\";\n\nconst exports = {\n  Root: BranchPickerRoot,\n  Previous: BranchPickerPrevious,\n  Next: BranchPickerNext,\n};\n\nexport default Object.assign(BranchPicker, exports) as typeof BranchPicker &\n  typeof exports;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,mBAA8D;AAC9D,0BAAkD;AAElD,iCAAkC;AAClC,0BAA6B;AAC7B,2BAAgC;AAChC,wBAAsC;AACtC,qBAA0B;AAYtB;AAVJ,IAAM,uBAAuB,CAAC,mBAAmB,UAAU;AACzD,QAAM,EAAE,cAAc,EAAE,oBAAoB,KAAK,IAAI,CAAC,EAAE,QAAI,sCAAgB;AAC5E,QAAM,4BAAwB,0BAAU,CAAC,MAAM,EAAE,aAAa,IAAI;AAClE,SAAO,sBAAsB,CAAC,oBAAoB;AACpD;AAEA,IAAM,eAAmB,MAAM;AAC7B,QAAM,oBAAoB,qBAAqB,IAAI;AACnD,MAAI,CAAC,kBAAmB,QAAO;AAC/B,SACE,6CAAC,oBAAiB,sBAAoB,MACpC;AAAA,gDAAC,wBAAqB;AAAA,IACtB,4CAAC,qBAAkB;AAAA,IACnB,4CAAC,oBAAiB;AAAA,KACpB;AAEJ;AAEA,aAAa,cAAc;AAE3B,IAAM,uBAAmB,kCAAa,wCAAsB,MAAM;AAAA,EAChE,WAAW;AACb,CAAC;AAED,iBAAiB,cAAc;AAO/B,IAAM,2BAAuB,yBAG3B,CAAC,OAAO,QAAQ;AAChB,QAAM;AAAA,IACJ,SAAS;AAAA,MACP,cAAc,EAAE,UAAU,EAAE,UAAU,WAAW,IAAI,CAAC,EAAE,IAAI,CAAC;AAAA,IAC/D,IAAI,CAAC;AAAA,EACP,QAAI,sCAAgB;AACpB,QAAM,oBAAoB,qBAAqB;AAC/C,SACE,4CAAC,wCAAsB,UAAtB,EAA+B,UAAU,CAAC,mBAAmB,SAAO,MACnE,sDAAC,gDAAkB,SAAmB,GAAG,OAAO,KAC7C,gBAAM,YAAY,4CAAC,uCAAgB,GACtC,GACF;AAEJ,CAAC;AAED,qBAAqB,cAAc;AAEnC,IAAM,+BAA2B,kCAAa,QAAQ;AAAA,EACpD,WAAW;AACb,CAAC;AAOD,IAAM,wBAAoB,yBAGxB,CAAC,OAAO,QAAQ;AAChB,SACE,6CAAC,4BAA0B,GAAG,OAAO,KACnC;AAAA,gDAAC,wCAAsB,QAAtB,EAA6B;AAAA,IAAE;AAAA,IAAG,4CAAC,wCAAsB,OAAtB,EAA4B;AAAA,KAClE;AAEJ,CAAC;AAED,kBAAkB,cAAc;AAOhC,IAAM,uBAAmB,yBAGvB,CAAC,OAAO,QAAQ;AAChB,QAAM;AAAA,IACJ,SAAS,EAAE,cAAc,EAAE,MAAM,EAAE,UAAU,OAAO,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC;AAAA,EACzE,QAAI,sCAAgB;AACpB,QAAM,oBAAoB,qBAAqB;AAC/C,SACE,4CAAC,wCAAsB,MAAtB,EAA2B,UAAU,CAAC,mBAAmB,SAAO,MAC/D,sDAAC,gDAAkB,SAAmB,GAAG,OAAO,KAC7C,gBAAM,YAAY,4CAAC,wCAAiB,GACvC,GACF;AAEJ,CAAC;AAED,iBAAiB,cAAc;AAE/B,IAAMA,WAAU;AAAA,EACd,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AACR;AAEA,IAAO,wBAAQ,OAAO,OAAO,cAAcA,QAAO;","names":["exports"]}