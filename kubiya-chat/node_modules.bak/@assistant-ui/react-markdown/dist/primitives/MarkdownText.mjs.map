{"version":3,"sources":["../../src/primitives/MarkdownText.tsx"],"sourcesContent":["\"use client\";\n\nimport { INTERNAL, useContentPartText } from \"@assistant-ui/react\";\nimport {\n  ComponentRef,\n  ElementType,\n  forwardRef,\n  ForwardRefExoticComponent,\n  RefAttributes,\n  type ComponentPropsWithoutRef,\n  type ComponentType,\n} from \"react\";\nimport ReactMarkdown, { type Options } from \"react-markdown\";\nimport { SyntaxHighlighterProps, CodeHeaderProps } from \"../overrides/types\";\nimport { PreOverride } from \"../overrides/PreOverride\";\nimport {\n  DefaultPre,\n  DefaultCode,\n  DefaultCodeBlockContent,\n  DefaultCodeHeader,\n} from \"../overrides/defaultComponents\";\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { CodeOverride } from \"../overrides/CodeOverride\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport classNames from \"classnames\";\n\nconst { useSmooth } = INTERNAL;\n\ntype MarkdownTextPrimitiveElement = ComponentRef<typeof Primitive.div>;\ntype PrimitiveDivProps = ComponentPropsWithoutRef<typeof Primitive.div>;\n\nexport type MarkdownTextPrimitiveProps = Omit<\n  Options,\n  \"components\" | \"children\"\n> & {\n  containerProps?: Omit<PrimitiveDivProps, \"children\" | \"asChild\"> | undefined;\n  containerComponent?: ElementType | undefined;\n  components?:\n    | (NonNullable<Options[\"components\"]> & {\n        SyntaxHighlighter?: ComponentType<SyntaxHighlighterProps> | undefined;\n        CodeHeader?: ComponentType<CodeHeaderProps> | undefined;\n        /**\n         * @deprecated Use `componentsByLanguage` instead of `components.by_language`. This will be removed in the next major version.\n         **/\n        by_language?: undefined;\n      })\n    | undefined;\n  componentsByLanguage?:\n    | Record<\n        string,\n        {\n          CodeHeader?: ComponentType<CodeHeaderProps> | undefined;\n          SyntaxHighlighter?: ComponentType<SyntaxHighlighterProps> | undefined;\n        }\n      >\n    | undefined;\n  smooth?: boolean | undefined;\n};\n\nexport const MarkdownTextPrimitive: ForwardRefExoticComponent<MarkdownTextPrimitiveProps> &\n  RefAttributes<MarkdownTextPrimitiveElement> = forwardRef<\n  MarkdownTextPrimitiveElement,\n  MarkdownTextPrimitiveProps\n>(\n  (\n    {\n      components: userComponents,\n      componentsByLanguage = userComponents?.by_language,\n      className,\n      containerProps,\n      containerComponent: Container = \"div\",\n      smooth = true,\n      ...rest\n    },\n    forwardedRef,\n  ) => {\n    const { text, status } = useSmooth(useContentPartText(), smooth);\n\n    const {\n      pre = DefaultPre,\n      code = DefaultCode,\n      SyntaxHighlighter = DefaultCodeBlockContent,\n      CodeHeader = DefaultCodeHeader,\n      by_language,\n      ...componentsRest\n    } = userComponents ?? {};\n    const components: Options[\"components\"] = {\n      ...componentsRest,\n      pre: PreOverride,\n      code: useCallbackRef((props) => (\n        <CodeOverride\n          components={{\n            Pre: pre,\n            Code: code,\n            SyntaxHighlighter,\n            CodeHeader,\n          }}\n          componentsByLanguage={componentsByLanguage}\n          {...props}\n        />\n      )),\n    };\n\n    return (\n      <Container\n        data-status={status.type}\n        {...containerProps}\n        className={classNames(className, containerProps?.className)}\n        ref={forwardedRef}\n      >\n        <ReactMarkdown components={components} {...rest}>\n          {text}\n        </ReactMarkdown>\n      </Container>\n    );\n  },\n);\n\nMarkdownTextPrimitive.displayName = \"MarkdownTextPrimitive\";\n"],"mappings":";;;AAEA,SAAS,UAAU,0BAA0B;AAC7C;AAAA,EAGE;AAAA,OAKK;AACP,OAAO,mBAAqC;AAE5C,SAAS,mBAAmB;AAC5B;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACK;AACP,SAAS,sBAAsB;AAC/B,SAAS,oBAAoB;AAE7B,OAAO,gBAAgB;AAkEf;AAhER,IAAM,EAAE,UAAU,IAAI;AAiCf,IAAM,wBACmC;AAAA,EAI9C,CACE;AAAA,IACE,YAAY;AAAA,IACZ,uBAAuB,gBAAgB;AAAA,IACvC;AAAA,IACA;AAAA,IACA,oBAAoB,YAAY;AAAA,IAChC,SAAS;AAAA,IACT,GAAG;AAAA,EACL,GACA,iBACG;AACH,UAAM,EAAE,MAAM,OAAO,IAAI,UAAU,mBAAmB,GAAG,MAAM;AAE/D,UAAM;AAAA,MACJ,MAAM;AAAA,MACN,OAAO;AAAA,MACP,oBAAoB;AAAA,MACpB,aAAa;AAAA,MACb;AAAA,MACA,GAAG;AAAA,IACL,IAAI,kBAAkB,CAAC;AACvB,UAAM,aAAoC;AAAA,MACxC,GAAG;AAAA,MACH,KAAK;AAAA,MACL,MAAM,eAAe,CAAC,UACpB;AAAA,QAAC;AAAA;AAAA,UACC,YAAY;AAAA,YACV,KAAK;AAAA,YACL,MAAM;AAAA,YACN;AAAA,YACA;AAAA,UACF;AAAA,UACA;AAAA,UACC,GAAG;AAAA;AAAA,MACN,CACD;AAAA,IACH;AAEA,WACE;AAAA,MAAC;AAAA;AAAA,QACC,eAAa,OAAO;AAAA,QACnB,GAAG;AAAA,QACJ,WAAW,WAAW,WAAW,gBAAgB,SAAS;AAAA,QAC1D,KAAK;AAAA,QAEL,8BAAC,iBAAc,YAAyB,GAAG,MACxC,gBACH;AAAA;AAAA,IACF;AAAA,EAEJ;AACF;AAEA,sBAAsB,cAAc;","names":[]}