"use strict";
"use client";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/primitives/MarkdownText.tsx
var MarkdownText_exports = {};
__export(MarkdownText_exports, {
  MarkdownTextPrimitive: () => MarkdownTextPrimitive
});
module.exports = __toCommonJS(MarkdownText_exports);
var import_react = require("@assistant-ui/react");
var import_react2 = require("react");
var import_react_markdown = __toESM(require("react-markdown"));
var import_PreOverride = require("../overrides/PreOverride.js");
var import_defaultComponents = require("../overrides/defaultComponents.js");
var import_react_use_callback_ref = require("@radix-ui/react-use-callback-ref");
var import_CodeOverride = require("../overrides/CodeOverride.js");
var import_classnames = __toESM(require("classnames"));
var import_jsx_runtime = require("react/jsx-runtime");
var { useSmooth } = import_react.INTERNAL;
var MarkdownTextPrimitive = (0, import_react2.forwardRef)(
  ({
    components: userComponents,
    componentsByLanguage = userComponents?.by_language,
    className,
    containerProps,
    containerComponent: Container = "div",
    smooth = true,
    ...rest
  }, forwardedRef) => {
    const { text, status } = useSmooth((0, import_react.useContentPartText)(), smooth);
    const {
      pre = import_defaultComponents.DefaultPre,
      code = import_defaultComponents.DefaultCode,
      SyntaxHighlighter = import_defaultComponents.DefaultCodeBlockContent,
      CodeHeader = import_defaultComponents.DefaultCodeHeader,
      by_language,
      ...componentsRest
    } = userComponents ?? {};
    const components = {
      ...componentsRest,
      pre: import_PreOverride.PreOverride,
      code: (0, import_react_use_callback_ref.useCallbackRef)((props) => /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
        import_CodeOverride.CodeOverride,
        {
          components: {
            Pre: pre,
            Code: code,
            SyntaxHighlighter,
            CodeHeader
          },
          componentsByLanguage,
          ...props
        }
      ))
    };
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
      Container,
      {
        "data-status": status.type,
        ...containerProps,
        className: (0, import_classnames.default)(className, containerProps?.className),
        ref: forwardedRef,
        children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_react_markdown.default, { components, ...rest, children: text })
      }
    );
  }
);
MarkdownTextPrimitive.displayName = "MarkdownTextPrimitive";
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  MarkdownTextPrimitive
});
//# sourceMappingURL=MarkdownText.js.map