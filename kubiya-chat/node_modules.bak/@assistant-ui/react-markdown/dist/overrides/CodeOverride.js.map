{"version":3,"sources":["../../src/overrides/CodeOverride.tsx"],"sourcesContent":["import { ComponentPropsWithoutRef, ComponentType, FC, useContext } from \"react\";\nimport { PreContext } from \"./PreOverride\";\nimport {\n  CodeComponent,\n  CodeHeaderProps,\n  PreComponent,\n  SyntaxHighlighterProps,\n} from \"./types\";\nimport { DefaultCodeBlock } from \"./CodeBlock\";\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { withDefaultProps } from \"./withDefaults\";\nimport { DefaultCodeBlockContent } from \"./defaultComponents\";\n\nconst CodeBlockOverride: FC<CodeOverrideProps> = ({\n  components: {\n    Pre,\n    Code,\n    SyntaxHighlighter: FallbackSyntaxHighlighter,\n    CodeHeader: FallbackCodeHeader,\n  },\n  componentsByLanguage = {},\n  children,\n  node,\n  ...codeProps\n}) => {\n  const preProps = useContext(PreContext)!;\n  const getPreProps = withDefaultProps<any>(preProps);\n  const WrappedPre: PreComponent = useCallbackRef((props) => (\n    <Pre {...getPreProps(props)} />\n  ));\n\n  const getCodeProps = withDefaultProps<any>(codeProps);\n  const WrappedCode: CodeComponent = useCallbackRef((props) => (\n    <Code {...getCodeProps(props)} />\n  ));\n\n  const language = /language-(\\w+)/.exec(codeProps.className || \"\")?.[1] ?? \"\";\n\n  // if the code content is not string (due to rehype plugins), return a default code block\n  if (typeof children !== \"string\") {\n    return (\n      <DefaultCodeBlockContent\n        components={{ Pre: WrappedPre, Code: WrappedCode }}\n        code={children}\n        node={node}\n      />\n    );\n  }\n\n  const SyntaxHighlighter: ComponentType<SyntaxHighlighterProps> =\n    componentsByLanguage[language]?.SyntaxHighlighter ??\n    FallbackSyntaxHighlighter;\n\n  const CodeHeader: ComponentType<CodeHeaderProps> =\n    componentsByLanguage[language]?.CodeHeader ?? FallbackCodeHeader;\n\n  return (\n    <DefaultCodeBlock\n      components={{\n        Pre: WrappedPre,\n        Code: WrappedCode,\n        SyntaxHighlighter,\n        CodeHeader,\n      }}\n      language={language || \"unknown\"}\n      code={children}\n      node={node}\n    />\n  );\n};\n\nexport type CodeOverrideProps = ComponentPropsWithoutRef<CodeComponent> & {\n  components: {\n    Pre: PreComponent;\n    Code: CodeComponent;\n    CodeHeader: ComponentType<CodeHeaderProps>;\n    SyntaxHighlighter: ComponentType<SyntaxHighlighterProps>;\n  };\n  componentsByLanguage?:\n    | Record<\n        string,\n        {\n          CodeHeader?: ComponentType<CodeHeaderProps>;\n          SyntaxHighlighter?: ComponentType<SyntaxHighlighterProps>;\n        }\n      >\n    | undefined;\n};\n\nexport const CodeOverride: FC<CodeOverrideProps> = ({\n  components,\n  componentsByLanguage,\n  ...props\n}) => {\n  const preProps = useContext(PreContext);\n  if (!preProps) return <components.Code {...props} />;\n  return (\n    <CodeBlockOverride\n      components={components}\n      componentsByLanguage={componentsByLanguage}\n      {...props}\n    />\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAwE;AACxE,yBAA2B;AAO3B,uBAAiC;AACjC,oCAA+B;AAC/B,0BAAiC;AACjC,+BAAwC;AAiBpC;AAfJ,IAAM,oBAA2C,CAAC;AAAA,EAChD,YAAY;AAAA,IACV;AAAA,IACA;AAAA,IACA,mBAAmB;AAAA,IACnB,YAAY;AAAA,EACd;AAAA,EACA,uBAAuB,CAAC;AAAA,EACxB;AAAA,EACA;AAAA,EACA,GAAG;AACL,MAAM;AACJ,QAAM,eAAW,yBAAW,6BAAU;AACtC,QAAM,kBAAc,sCAAsB,QAAQ;AAClD,QAAM,iBAA2B,8CAAe,CAAC,UAC/C,4CAAC,OAAK,GAAG,YAAY,KAAK,GAAG,CAC9B;AAED,QAAM,mBAAe,sCAAsB,SAAS;AACpD,QAAM,kBAA6B,8CAAe,CAAC,UACjD,4CAAC,QAAM,GAAG,aAAa,KAAK,GAAG,CAChC;AAED,QAAM,WAAW,iBAAiB,KAAK,UAAU,aAAa,EAAE,IAAI,CAAC,KAAK;AAG1E,MAAI,OAAO,aAAa,UAAU;AAChC,WACE;AAAA,MAAC;AAAA;AAAA,QACC,YAAY,EAAE,KAAK,YAAY,MAAM,YAAY;AAAA,QACjD,MAAM;AAAA,QACN;AAAA;AAAA,IACF;AAAA,EAEJ;AAEA,QAAM,oBACJ,qBAAqB,QAAQ,GAAG,qBAChC;AAEF,QAAM,aACJ,qBAAqB,QAAQ,GAAG,cAAc;AAEhD,SACE;AAAA,IAAC;AAAA;AAAA,MACC,YAAY;AAAA,QACV,KAAK;AAAA,QACL,MAAM;AAAA,QACN;AAAA,QACA;AAAA,MACF;AAAA,MACA,UAAU,YAAY;AAAA,MACtB,MAAM;AAAA,MACN;AAAA;AAAA,EACF;AAEJ;AAoBO,IAAM,eAAsC,CAAC;AAAA,EAClD;AAAA,EACA;AAAA,EACA,GAAG;AACL,MAAM;AACJ,QAAM,eAAW,yBAAW,6BAAU;AACtC,MAAI,CAAC,SAAU,QAAO,4CAAC,WAAW,MAAX,EAAiB,GAAG,OAAO;AAClD,SACE;AAAA,IAAC;AAAA;AAAA,MACC;AAAA,MACA;AAAA,MACC,GAAG;AAAA;AAAA,EACN;AAEJ;","names":[]}