"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/overrides/CodeOverride.tsx
var CodeOverride_exports = {};
__export(CodeOverride_exports, {
  CodeOverride: () => CodeOverride
});
module.exports = __toCommonJS(CodeOverride_exports);
var import_react = require("react");
var import_PreOverride = require("./PreOverride.js");
var import_CodeBlock = require("./CodeBlock.js");
var import_react_use_callback_ref = require("@radix-ui/react-use-callback-ref");
var import_withDefaults = require("./withDefaults.js");
var import_defaultComponents = require("./defaultComponents.js");
var import_jsx_runtime = require("react/jsx-runtime");
var CodeBlockOverride = ({
  components: {
    Pre,
    Code,
    SyntaxHighlighter: FallbackSyntaxHighlighter,
    CodeHeader: FallbackCodeHeader
  },
  componentsByLanguage = {},
  children,
  node,
  ...codeProps
}) => {
  const preProps = (0, import_react.useContext)(import_PreOverride.PreContext);
  const getPreProps = (0, import_withDefaults.withDefaultProps)(preProps);
  const WrappedPre = (0, import_react_use_callback_ref.useCallbackRef)((props) => /* @__PURE__ */ (0, import_jsx_runtime.jsx)(Pre, { ...getPreProps(props) }));
  const getCodeProps = (0, import_withDefaults.withDefaultProps)(codeProps);
  const WrappedCode = (0, import_react_use_callback_ref.useCallbackRef)((props) => /* @__PURE__ */ (0, import_jsx_runtime.jsx)(Code, { ...getCodeProps(props) }));
  const language = /language-(\w+)/.exec(codeProps.className || "")?.[1] ?? "";
  if (typeof children !== "string") {
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
      import_defaultComponents.DefaultCodeBlockContent,
      {
        components: { Pre: WrappedPre, Code: WrappedCode },
        code: children,
        node
      }
    );
  }
  const SyntaxHighlighter = componentsByLanguage[language]?.SyntaxHighlighter ?? FallbackSyntaxHighlighter;
  const CodeHeader = componentsByLanguage[language]?.CodeHeader ?? FallbackCodeHeader;
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
    import_CodeBlock.DefaultCodeBlock,
    {
      components: {
        Pre: WrappedPre,
        Code: WrappedCode,
        SyntaxHighlighter,
        CodeHeader
      },
      language: language || "unknown",
      code: children,
      node
    }
  );
};
var CodeOverride = ({
  components,
  componentsByLanguage,
  ...props
}) => {
  const preProps = (0, import_react.useContext)(import_PreOverride.PreContext);
  if (!preProps) return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(components.Code, { ...props });
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
    CodeBlockOverride,
    {
      components,
      componentsByLanguage,
      ...props
    }
  );
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  CodeOverride
});
//# sourceMappingURL=CodeOverride.js.map